---
version: 2.0

#构建环境
envs:
  - condition: ENV_VM == "VPC"
    label: OceanProtect_X8000_1.3.0_euler_arm_VPC
  - condition: ENV_VM != "VPC"
    label: X8000_1.3.0_euler_arm

#是否固定构建根目录
buildspace:
  fixed: true

#构建参数，构建命令可通过环境变量使用
params:
  - name: IS_SNAPSHOT
    value: ${IS_SNAPSHOT}
  - name: PBI_NAME
    value: '${PBI_NAME}'
  - name: PRODUCT
    value: ${PRODUCT}
  - name: CODE_BRANCH
    value: ${branch}
  - name: PM_BRANCH
    value: ${branch}
  - name: DME_BRANCH
    value: ${branch}
  - name: DEE_BRANCH
    value: ${branch}
  - name: INF_BRANCH
    value: ${branch}
  - name: DMA_BRANCH
    value: ${branch}
  - name: AGENT_BRANCH
    value: ${branch}
  - name: MS_IMAGE_TAG
    value: ${MS_IMAGE_TAG}

#构建步骤
steps:
  CONFIG_ENV:
    - sh:
        command: |
          systemctl restart docker
          chmod -R 777 /var/run/docker*
          chmod 777 /run/docker*
          ls -l /run/docker*
          echo "delete /mnt/disk1/dir3/workspace/cmc_temp"
          rm -rf /mnt/disk1/dir3/workspace/cmc_temp
          chmod +w /etc/sudoers
          test `cat /etc/sudoers |grep cp |wc -l` -eq 0 && echo -e "Cmnd_Alias    CP = /usr/bin/cp\nALL    ALL=NOPASSWD: CP" >> /etc/sudoers
          test `cat /etc/sudoers |grep sed |wc -l` -eq 0 && echo -e "Cmnd_Alias    SED = /usr/bin/sed\nALL    ALL=NOPASSWD: SED" >> /etc/sudoers
          test `cat /etc/sudoers |grep find |wc -l` -eq 0 && echo -e "Cmnd_Alias    FIND = /usr/bin/find\nALL    ALL=NOPASSWD: FIND" >> /etc/sudoers
          test `cat /etc/sudoers |grep mv |wc -l` -eq 0 && echo -e "Cmnd_Alias    MV = /usr/bin/mv\nALL    ALL=NOPASSWD: MV" >> /etc/sudoers
          test `cat /etc/sudoers |grep sha256sum |wc -l` -eq 0 && echo -e "Cmnd_Alias    SHA256SUM = /usr/bin/sha256sum\nALL    ALL=NOPASSWD: SHA256SUM" >> /etc/sudoers
          test `cat /etc/sudoers |grep "/usr/bin/su" |grep -v sudo|wc -l` -eq 0 && echo -e "Cmnd_Alias    SU = /usr/bin/su\nALL    ALL=NOPASSWD: SU" >> /etc/sudoers
          test `cat /etc/sudoers |grep "/bin/ls" |wc -l` -eq 0 && echo -e "Cmnd_Alias    LS = /bin/ls\nALL    ALL=NOPASSWD: LS" >> /etc/sudoers
          test `cat /etc/sudoers |grep "/usr/bin/rm" |wc -l` -eq 0 && echo -e "Cmnd_Alias    RM = /usr/bin/rm\nALL    ALL=NOPASSWD: RM" >> /etc/sudoers
          chmod -w /etc/sudoers
          cat /etc/sudoers
        sudo: true
  PRE_BUILD: # 构建准备
    - manifest_checkout:
        manifest_file: ${dependency_path}
        groups: ${manifest_groups}
        strict: "false"
    - sh:
        command: |
          sh DPAProduct/build/image_init.sh
  BUILD:
    - when:
        condition: BEP != 'YES'
        steps:
          - build_execute:
              command: |
                echo "buildVersion=$(cat DPAProduct/app_define.json |\
                awk -F '\"version":' '{print $2}' | awk -F ',' '{print $1}' | sed 's/\"//g')\
                .${ENV_PIPELINE_STARTTIME}" > buildInfo.properties
                cat buildInfo.properties
                sh DPAProduct/CI/script/Package_100P.sh -s ${IS_SNAPSHOT} -p ${PBI_NAME}
              accelerate: false
              check:
                  auto: true
                  mode: sync
    - when:
        condition: BEP == 'YES'
        steps:
          - build_execute:
              command: |
                echo "buildVersion=$(cat DPAProduct/app_define.json |\
                awk -F '\"version":' '{print $2}' | awk -F ',' '{print $1}' | sed 's/\"//g')\
                .${ENV_PIPELINE_STARTTIME}" > buildInfo.properties
                cat buildInfo.properties
                sh DPAProduct/CI/script/Package_100P.sh -s ${IS_SNAPSHOT} -p ${PBI_NAME}
              accelerate:
                isAccelerate: false
                isCache: true
              check: false
  POST_BUILD:
    - when:
        condition: IS_ComponentVersion == 'N' && BEP != 'YES'
        steps:
          - get_build_metadata
          - artget:
              action: push
              artifact_type: cmcbinary
              dependency: DPAProduct/CI/LCRP/conf/bversion.xml
              add_source_code: restore
              add_env_image: true
              agent: DPAProduct/pkg/${BUILD_PKG_TYPE}
              params:
                IS_SNAPSHOT: ${IS_SNAPSHOT}
              version_output_path: .
              username: ${cmc_user}
              password: ${cmc_pwd}
          - get_build_metadata
    - artget:
        artifact_type: cloudartifact
        file_path: 'DPAProduct/pkg/${BUILD_PKG_TYPE}/final/*.zip;DPAProduct/pkg/${BUILD_PKG_TYPE}/final/*.tgz;DPAProduct/pkg/${BUILD_PKG_TYPE}/final/*.tar.gz'
    - version_set