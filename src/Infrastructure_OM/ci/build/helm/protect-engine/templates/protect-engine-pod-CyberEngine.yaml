{{/*
Get running environment
*/}}
{{- $environment:= "" }}
{{- $realreplicas:= "" }}
{{- if .Values.global }}
{{- $environment = .Values.global.environment }}
{{- $realreplicas = .Values.global.replicas }}
{{- else }}
{{- $environment = .Values.local.environment }}
{{- $realreplicas = .Values.local.replicas }}
{{- end }}

{{- $deploytype:= include "getDeployType" . | default "" }}

{{- if eq $deploytype "d5"}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: protectengine
  namespace: dpa
spec:
  selector:
    matchLabels:
      app: protectengine
  serviceName: protectengine
  replicas: {{ $realreplicas }}
  template:
    metadata:
      labels:
        app: protectengine # has to match .spec.selector.matchLabels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - protectengine
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: dme-sa
      securityContext:
        fsGroup: 99
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 0
      containers:
        - name: dee-anti-ransomware
          image: dee_anti_ransomware:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 15033
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              add:
                - SYS_ADMIN
                - IPC_OWNER
              drop:
                - NET_RAW
                - SETFCAP
                - KILL
                - MKNOD
            readOnlyRootFilesystem: true
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.anti_ransomware_container_port }}
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          envFrom:
            - configMapRef:
                name: dee-common-conf
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /tmp
              name: dee-anti-ransomware-tmp
            - mountPath: /tmp/share
              name: share-path
            - mountPath: /mnt
              name: dee-anti-ransomware-mnt
            - mountPath: /var/tmp
              name: dee-var
            {{- if ne $environment "Dorado" }}
            - mountPath: /dev/fuse
              name: fuse
            - mountPath: /dev/kvm
              name: kvm
            {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MICRO_SERVICE_NAME
              value: dee-anti-ransomware
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: DEPLOY_TYPE
              valueFrom:
                configMapKeyRef:
                  name: common-conf
                  key: deploy_type
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
              {{- if eq $environment "Dorado" }}
          resources:
            requests:
              memory: "91Gi"
              cpu: "44.4"
            limits:
              memory: "91Gi"
              cpu: "44.4"
              {{- end }}
      initContainers:
        - name: dee-init-container
          image: dee_initcontainer:{{ .Values.global.version }}
          command: ['sh', '-c', 'sh /opt/OceanStor/100P/DataEnableEngine/initcontainer/dee_init_container.sh']
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp/share
              name: share-path
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /antitmp
              name: dee-anti-ransomware-tmp
            - mountPath: /antimnt
              name: dee-anti-ransomware-mnt
            - mountPath: /var/tmp
              name: dee-var
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DEPLOY_TYPE
              value: {{ $deploytype }}
      volumes:
        - name: date-config
          hostPath:
            path: /etc/localtime
        - name: common-conf
          configMap:
            name: common-conf
        - name: common-path
          persistentVolumeClaim:
            claimName: "comm-nas"
        - name: share-path
          persistentVolumeClaim:
            claimName: "dee-nas"
        - name: dee-conf
          configMap:
            name: dee-common-conf
            defaultMode: 0640
        - name: dee-var
          emptyDir: {}
        - name: dee-anti-ransomware-tmp
          emptyDir: {}
        - name: dee-anti-ransomware-mnt
          emptyDir: {}
        - name: kmc-conf
          configMap:
            name: kmc-store-conf
            defaultMode: 0640
{{- end }}