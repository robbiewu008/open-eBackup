{{/*
Get running environment
*/}}
{{- $environment:= "" }}
{{- $realreplicas:= "" }}
{{- $storagehost:= "" }}
{{- $storageuser:= "" }}
{{- $storagepwd:= "" }}
{{- if .Values.global }}
{{- $environment = .Values.global.environment }}
{{- if hasKey .Values.global "kataReplicas" }}
{{- $realreplicas = .Values.global.kataReplicas }}
{{- else }}
{{- $realreplicas = .Values.global.replicas }}
{{- end }}
{{- $storagehost = .Values.global.storagehost }}
{{- $storageuser = .Values.global.storageuser }}
{{- $storagepwd = .Values.global.storagepwd }}
{{- else }}
{{- $environment = .Values.local.environment }}
{{- $realreplicas = .Values.local.replicas }}
{{- end }}

{{- $storageuser:= "" }}
{{- if .Values.global }}
{{- $storageuser = .Values.global.storageuser }}
{{- else }}
{{- $storageuser = "admin"}}
{{- end }}

{{- $storagepwd:= "" }}
{{- if .Values.global }}
{{- $storagepwd = .Values.global.storagepwd }}
{{- else }}
{{- $storagepwd = ""}}
{{- end }}

{{- $storagehost:= "" }}
{{- if .Values.global }}
{{- $storagehost = .Values.global.storagehost }}
{{- else }}
{{- $storagehost = "0.0.0.0"}}
{{- end }}

{{- $proxyip:= "" }}
{{- if .Values.global }}
{{- $proxyip = .Values.global.proxyip }}
{{- else }}
{{- $proxyip = "0.0.0.0"}}
{{- end }}
{{- $deploytype:= include "getDeployType" . | default "" }}

{{- if or (eq $deploytype "cloudbackup") (eq $deploytype "d3")}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: protectengine
  namespace: dpa
spec:
  selector:
    matchLabels:
      app: protectengine
  serviceName: protectengine
  replicas: {{ $realreplicas }}
  template:
    metadata:
      labels:
        app: protectengine # has to match .spec.selector.matchLabels
      annotations:
{{- include "protectengine-a.networksAnnotation" . | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - protectengine
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: dme-sa
      securityContext:
        fsGroup: 99
      terminationGracePeriodSeconds: 0
      containers:
        - name: dme-nginx
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: DEPLOY_TYPE
              value: {{ $deploytype }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: dme_nginx:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/nginx/script/check_health.sh dme-nginx
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 5
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            runAsUser: 65500
            capabilities:
              add:
                - SYS_ADMIN
          volumeMounts:
            - mountPath: /opt/podinfo
              name: podinfo
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/network-conf
              name: network-conf
          resources:
            requests:
              cpu: "0.1"
            limits:
              cpu: "0.5"
              memory: "0.2G"
        - name: dee-global-search
          image: dee_global_search:{{ .Values.global.version }}
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "0.1"
              memory: "1G"
            limits:
              cpu: "2"
              memory: "2.7G"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MICRO_SERVICE_NAME
              value: dee-global-search
            - name: ENVIRONMENT
              value: {{ $environment }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /opt/OceanStor/100P/DataEnableEngine/bin/check_health.sh
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /tmp
              name: dee-tmp
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            {{- if eq $environment "Dorado" }}
            - mountPath: /opt/podinfo
              name: podinfo
            {{- end }}
          securityContext:
            runAsUser: 15031
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              drop:
                - NET_RAW
                - SETFCAP
                - KILL
                - MKNOD
                - DAC_OVERRIDE
                - FOWNER
                - CHOWN
            readOnlyRootFilesystem: true
            {{- end }}
        - name: dee-indexer
          image: dee_indexer:{{ .Values.global.version }}
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "0.3"
              memory: "2G"
            limits:
              cpu: "2"
              memory: "2.7G"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /opt/OceanStor/100P/DataEnableEngine/bin/check_health.sh
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /tmp
              name: dee-tmp
            - mountPath: /mnt
              name: dee-mnt
            - mountPath: /tmp/share
              name: share-path
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            {{- if eq $environment "Dorado" }}
            - mountPath: /opt/podinfo
              name: podinfo
            {{- end }}
          securityContext:
            runAsUser: 0
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              add:
                - SYS_ADMIN
              drop:
                - NET_RAW
                - SETFCAP
                - KILL
                - MKNOD
            readOnlyRootFilesystem: true
            {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: MICRO_SERVICE_NAME
              value: dee-indexer
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: dataenableengine-conf
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: dataenableengine-conf
            - name: DEPLOY_TYPE
              valueFrom:
                configMapKeyRef:
                  name: common-conf
                  key: deploy_type
        - name: dme-archive
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: DEPLOY_TYPE
              valueFrom:
                configMapKeyRef:
                  name: common-conf
                  key: deploy_type
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: PGSSLROOTCERT
              value: {{ .Values.pgsslrootcert }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: dme_archive:{{ .Values.global.version }}
          imagePullPolicy: Never
          securityContext:
            readOnlyRootFilesystem: true
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
                - SYS_RAWIO
              drop:
                - MKNOD
                - SETFCAP
            {{- end }}
          readinessProbe:
            failureThreshold: 10
            exec:
              command: ['sh','/opt/OceanStor/100P/ProtectEngine-E/dme_archive/script/dmeservice/check_health.sh', 'dme-archive']
            initialDelaySeconds: 100
            periodSeconds: 5
            timeoutSeconds: 10
          livenessProbe:
            failureThreshold: 10
            exec:
              command: ['sh','/opt/OceanStor/100P/ProtectEngine-E/dme_archive/script/dmeservice/check_health.sh', 'dme-archive']
            initialDelaySeconds: 100
            periodSeconds: 5
            timeoutSeconds: 20
          resources:
            requests:
              cpu: "0.6"
              memory: "2G"
            limits:
              memory: "4G"
              cpu: "4"
          volumeMounts:
            - mountPath: /mnt
              name: archive-mnt
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/huawei-data-protection/vmware/bricks/
              name: metadata-path
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-openstorageapi
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MICRO_SERVICE_NAME
              value: dme_openstorageapi
            - name: SUB_SYSTEM_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              value: {{ $deploytype }}
            - name: DEPLOY_ENV
              value: k8s_cluster
            - name: ENVIRONMENT
              value: {{ $environment }}
          image: dme_openstorageapi:{{ .Values.global.version }}
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "0.3"
              memory: "2G"
            limits:
              cpu: "2"
              memory: "2.7G"
          livenessProbe:
            tcpSocket:
              port: {{ .Values.dme_openstorageapi_port}}
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
              drop:
                - SETFCAP
                - KILL
                - MKNOD
          volumeMounts:
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /opt/common-conf
              name: common-conf
              readOnly: true
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
      initContainers:
        - name: init-dma
          image: dme_initcontainer:{{ .Values.global.version }}
          command:
            - /bin/bash
            - -c
            - | 
              sh /opt/OceanStor/100P/ProtectEngine-E/initcontainer/init_container.sh
          imagePullPolicy: Never
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          volumeMounts:
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /cache
              name: cache-volume
            - mountPath: /opt/huawei-data-protection/vmware/bricks/
              name: metadata-path
            - mountPath: /mnt
              name: dee-mnt
            - mountPath: /mnt/filesystem/
              name: cache-filesystem
            - mountPath: /dee-tmp
              name: dee-tmp
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: COMPONENT_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              valueFrom:
                configMapKeyRef:
                  name: common-conf
                  key: deploy_type
        - name: dee-init-container
          image: dee_initcontainer:{{ .Values.global.version }}
          command: ['sh', '-c', 'sh /opt/OceanStor/100P/DataEnableEngine/initcontainer/dee_init_container.sh']
          imagePullPolicy: Never
          volumeMounts:
            - mountPath: /tmp/share
              name: share-path
            - mountPath: /cache
              name: cache-volume
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /antitmp
              name: dee-anti-ransomware-tmp
            - mountPath: /antimnt
              name: dee-anti-ransomware-mnt
            - mountPath: /baseparsertmp
              name: dee-base-parser-tmp
            - mountPath: /baseparsermnt
              name: dee-base-parser-mnt
            - mountPath: /var/tmp
              name: dee-var
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DEPLOY_TYPE
              value: {{ $deploytype }}
      volumes:
        - name: agent-tmp
          emptyDir: {}
        - name: dee-tmp
          emptyDir: {}
        - name: dee-mnt
          emptyDir: {}
        - name: date-config
          hostPath:
            path: /etc/localtime
        - name: dee-root
          emptyDir: {}
        - name: archive-mnt
          emptyDir: {}
        - name: config
          configMap:
            name: dataenableengine-conf
        - name: cache-volume
          emptyDir: {}
        - name: cache-filesystem
          emptyDir:
            sizeLimit: 64Mi
        - name: protectengine-e-conf
          configMap:
            name: protectengine-e-conf
        - name: network-conf
          configMap:
            name: network-conf
        - name: common-conf
          configMap:
            name: common-conf
        - name: kmc-conf
          configMap:
            name: kmc-store-conf
            defaultMode: 0640
        - name: dee-var
          emptyDir: {}
        - name: dee-base-parser-tmp
          emptyDir: {}
        - name: dee-anti-ransomware-tmp
          emptyDir: {}
        - name: dee-base-parser-mnt
          emptyDir: {}
        - name: dee-anti-ransomware-mnt
          emptyDir: {}
        {{- if eq $environment "Dorado" }}
        - name: common-path
          persistentVolumeClaim:
            claimName: "comm-nas"
        - name: metadata-path
          persistentVolumeClaim:
            claimName: "dme-nas"
        - name: share-path
          persistentVolumeClaim:
            claimName: "dee-nas"
        - name: podinfo
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        {{- else }}
        - name: network-config
          hostPath:
            path: /etc/sysconfig/network-scripts/ifcfg-eth4
        - name: modules
          hostPath:
            path: /lib/modules
        - name: common-path
          hostPath:
            path: /opt/OceanProtect
        - name: metadata-path
          hostPath:
            path: /opt/DataMoveEngine/MetaData
        - name: share-path
          hostPath:
            path: /tmp/share
        {{- end }}
{{- end }}
