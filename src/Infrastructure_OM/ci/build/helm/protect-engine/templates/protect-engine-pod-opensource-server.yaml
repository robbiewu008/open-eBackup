{{/*
Get running environment
*/}}
{{- $environment:= "" }}
{{- $cluster_enable:= "" }}
{{- $realreplicas:= "" }}
{{- if .Values.global }}
{{- $cluster_enable = .Values.global.cluster_enable | toString }}
{{- $environment = .Values.global.environment }}
{{- $realreplicas = .Values.global.replicas }}
{{- else }}
{{- $environment = .Values.local.environment }}
{{- $cluster_enable:= "false" }}
{{- $realreplicas = .Values.local.replicas }}
{{- end }}

{{- $deploytype:= include "getDeployType" . | default "" }}

{{- if eq $deploytype "d10" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: protectengine
  namespace: dpa
spec:
  selector:
    matchLabels:
      app: protectengine
  serviceName: protectengine
  replicas: {{ $realreplicas }}
  template:
    metadata:
      labels:
        app: protectengine # has to match .spec.selector.matchLabels
      {{- if eq $cluster_enable "true" }}
      annotations:
        tag: cluster
      {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - protectengine
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: dme-sa
      securityContext:
        fsGroup: 99
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 0
      containers:
        - name: dme-vmware
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: PGSSLROOTCERT
              value: {{ .Values.pgsslrootcert }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DEPLOY_TYPE
              value: d8
          image: dme_vmware:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "1"
              memory: "2G"
          ports:
            - containerPort: 30063
          livenessProbe:
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/dme_vmware/script/dmeservice/check_health.sh dme-vmware
            initialDelaySeconds: 100
            periodSeconds: 10
            timeoutSeconds: 10
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            runAsUser: 99
            capabilities:
              add:
                - SYS_ADMIN
              drop:
                - MKNOD
                - SETFCAP
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/huawei-data-protection/vmware/bricks/
              name: metadata-path
            - mountPath: /opt/huawei-data-protection/vmware/
              name: metadata-path
            - mountPath: /etc/common-secret
              name: vmware-secret
              readOnly: true
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-nginx
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: DEPLOY_TYPE
              value: d8
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: dme_nginx:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.dme_nginx_port }}
              name: web
          livenessProbe:
            {{- if ne $environment "Dorado" }}
            tcpSocket:
              port: {{ .Values.dme_nginx_port }}
            {{- else }}
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/nginx/script/check_health.sh dme-nginx
            {{- end }}
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 65500
            readOnlyRootFilesystem: true
            capabilities:
              add:
                - SYS_ADMIN
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-jobmanager
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: PGSSLROOTCERT
              value: {{ .Values.pgsslrootcert }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DEPLOY_TYPE
              value: d8
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: dme_jobmanager:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/dme_jobmanager/script/dmeservice/check_health.sh dme-jobmanager
            initialDelaySeconds: 100
            periodSeconds: 10
            timeoutSeconds: 10
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            runAsUser: 15023
            capabilities:
              add:
                - SYS_ADMIN
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
        - name: dme-replication
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FILECLIENT_CONF_PATH
              value: /opt/logpath/FileClient/$(NODE_NAME)/dme_replication/conf
            - name: FILECLIENT_LOG_PATH
              value: /opt/OceanStor/100P/ProtectEngine-E/dme_replication/logs
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: PGSSLROOTCERT
              value: {{ .Values.pgsslrootcert }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: dme_replication:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "0.3"
              memory: "2G"
            limits:
              cpu: "7"
              memory: "6G"
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
              drop:
                - MKNOD
                - SETFCAP
            {{- end }}
            readOnlyRootFilesystem: true
            runAsUser: 99
          ports:
            - containerPort: 30064
          livenessProbe:
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/dme_replication/script/dmeservice/check_health.sh dme-replication
            initialDelaySeconds: 100
            periodSeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/network-conf
              name: network-conf
            - mountPath: /opt/huawei-data-protection/metadata/bricks/
              name: metadata-path
            - mountPath: /opt/huawei-data-protection/vmware/
              name: metadata-path
        - name: dme-unifiedbackupcontroller
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FILECLIENT_CONF_PATH
              value: /opt/OceanProtect/FileClient/$(NODE_NAME)/dme_unifiedbackupcontroller/conf
            - name: FILECLIENT_LOG_PATH
              value: /opt/OceanProtect/logs/$(NODE_NAME)/protectengine-e/dme_unifiedbackupcontroller
            - name: MICRO_SERVICE_NAME
              value: dme_unifiedbackupcontroller
            - name: SUB_SYSTEM_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              value: d8
            - name: DEPLOY_ENV
              value: k8s_cluster
            - name: PREPARE_THREAD_POOL_NUM
              value: "5"
            - name: ACTIVE_THREAD_POOL_NUM
              value: "5"
            - name: CLEAN_THREAD_POOL_NUM
              value: "3"
            - name: POST_THREAD_POOL_NUM
              value: "5"
            - name: GLOBAL_THREAD_POOL_NUM
              value: "10"
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: dme_unifiedbackupcontroller:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - SYS_ADMIN
              drop:
                - SETFCAP
                - KILL
                - MKNOD
            readOnlyRootFilesystem: true
            runAsUser: 15025
          livenessProbe:
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - sh /opt/OceanStor/100P/ProtectEngine-E/dme_unifiedbackupcontroller/script/check_health.sh dme-unified
            initialDelaySeconds: 100
            periodSeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /cache
              name: ubc-tmp
            - mountPath: /mnt/repository
              name: cache-filesystem
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /opt/common-conf
              name: common-conf
              readOnly: true
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /etc/common-secret
              name: ubc-secret
              readOnly: true
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-archive
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: DEPLOY_TYPE
              value: d8
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: PGSSLROOTCERT
              value: {{ .Values.pgsslrootcert }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: dme_archive:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "0.6"
              memory: "2G"
            limits:
              memory: "2G"
              cpu: "2"
          securityContext:
            readOnlyRootFilesystem: true
            {{- if ne $environment "Dorado" }}
            privileged: true
            {{- else }}
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
                - SYS_RAWIO
              drop:
                - MKNOD
                - SETFCAP
            {{- end }}
          livenessProbe:
            failureThreshold: 5
            exec:
              command: ['sh','/opt/OceanStor/100P/ProtectEngine-E/dme_archive/script/dmeservice/check_health.sh', 'dme-archive']
            initialDelaySeconds: 100
            periodSeconds: 5
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /mnt
              name: archive-mnt
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /cache
              name: cache-volume
            - mountPath: /config
              name: protectengine-e-conf
              readOnly: true
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /etc/common-secret
              name: ubc-secret
              readOnly: true
            - mountPath: /opt/logpath
              name: common-path
            - mountPath: /opt/huawei-data-protection/vmware/bricks/
              name: metadata-path
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-openstorageapi-controller
          image: dme_openstorageapi_controller:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MICRO_SERVICE_NAME
              value: dme_openstorageapi_controller
            - name: SUB_SYSTEM_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              value: d8
            - name: DEPLOY_ENV
              value: k8s_cluster
            - name: ENVIRONMENT
              value: {{ $environment }}
            - name: APP_VERSION
              value: {{ .Values.global.version }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.dme_openstorageapi_controller_port}}
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          securityContext:
            runAsUser: 0
            privileged: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /dev
              name: dev-dir
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /opt/common-conf
              name: common-conf
              readOnly: true
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            - mountPath: /opt/network-conf
              name: network-conf
        - name: dme-openstorageapi
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MICRO_SERVICE_NAME
              value: dme_openstorageapi
            - name: SUB_SYSTEM_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              value: d8
            - name: DEPLOY_ENV
              value: k8s_cluster
            - name: ENVIRONMENT
              value: {{ $environment }}
          image: dme_openstorageapi:{{ .Values.global.version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "0.3"
              memory: "2G"
            limits:
              memory: "6G"
              cpu: "7"
          ports:
            - containerPort: 30173
          livenessProbe:
            tcpSocket:
              port: {{ .Values.dme_openstorageapi_port}}
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 20
            timeoutSeconds: 10
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
              drop:
                - SETFCAP
                - KILL
                - MKNOD
          volumeMounts:
            - mountPath: /etc/localtime
              name: date-config
              readOnly: true
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /opt/common-conf
              name: common-conf
              readOnly: true
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
      initContainers:
        - name: init-dma
          image: dme_initcontainer:{{ .Values.global.version }}
          command:
            - /bin/bash
            - -c
            - |
              sh /usr/local/common-init/install.sh;
              sh /opt/OceanStor/100P/ProtectEngine-E/initcontainer/init_container.sh
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add: ["NET_ADMIN","SYS_MODULE"]
          volumeMounts:
            - mountPath: /opt/OceanProtect
              name: common-path
            - mountPath: /cache
              name: cache-volume
            - mountPath: /opt/huawei-data-protection/vmware/bricks/
              name: metadata-path
            - mountPath: /opt/huawei-data-protection/vmware/
              name: metadata-path
            - mountPath: /mnt/filesystem/
              name: cache-filesystem
            - mountPath: /opt/protectagent
              name: agent-volume
            - mountPath: /kmc_conf
              name: kmc-conf
            - mountPath: /ubc-tmp
              name: ubc-tmp
            - mountPath: /mnt-agent
              name: agent-tmp
            - mountPath: /lib/modules
              name: modules
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: COMPONENT_NAME
              value: protectengine-e
            - name: DEPLOY_TYPE
              value: d8
            - name: ENVIRONMENT
              value: {{ $environment }}
      volumes:
        - name: dev-dir
          hostPath:
            path: /dev
        - name: kmc-conf
          configMap:
            name: kmc-store-conf
            defaultMode: 0640
        - name: agent-tmp
          emptyDir: {}
        - name: ubc-tmp
          emptyDir: {}
        - name: metadata-path
          emptyDir: {}
        - name: date-config
          hostPath:
            path: /etc/localtime
        - name: cache-volume
          emptyDir: {}
        - name: cache-filesystem
          emptyDir:
            sizeLimit: 64Mi
        - name: protectengine-e-conf
          configMap:
            name: protectengine-e-conf
        - name: common-conf
          configMap:
            name: common-conf
        - name: network-conf
          configMap:
            name: network-conf
        - name: ubc-secret
          secret:
            secretName: common-secret
            items:
              - key: cifs_backup.password
                path: cifs_backup.password
              - key: data_turbo.password
                path: data_turbo.password
        - name: vmware-secret
          secret:
            secretName: common-secret
            items:
              - key: vm_data_turbo.password
                path: vm_data_turbo.password
        - name: oracle-secret
          secret:
            secretName: common-secret
            items:
              - key: oracle_data_turbo.password
                path: oracle_data_turbo.password
        - name: archive-mnt
          emptyDir: {}
        - name: modules
          hostPath:
            path: /lib/modules
        - name: multicluster-conf
          configMap:
            name: multicluster-conf
            defaultMode: 0644
        {{- if eq $environment "Dorado" }}
        - name: common-path
          persistentVolumeClaim:
            claimName: "comm-nas"
        - name: agent-volume
          persistentVolumeClaim:
            claimName: "agent-nas"
        - name: pm-path
          persistentVolumeClaim:
            claimName: "pm-nas2"
        {{- else }}
        - name: common-path
          hostPath:
            path: /opt/OceanProtect
        - name: share-path
          hostPath:
            path: /tmp/share
        - name: agent-volume
          hostPath:
            path: /opt/protectagent
        - name: pm-path
          hostPath:
            path: /opt/ProtectManager
        {{- end }}
{{- end }}