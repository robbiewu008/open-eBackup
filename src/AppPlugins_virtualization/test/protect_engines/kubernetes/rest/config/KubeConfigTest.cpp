/*
* This file is a part of the open-eBackup project.
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*
* Copyright (c) [2024] Huawei Technologies Co.,Ltd.
*
* THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
* EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
* MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
*/
#include "gtest/gtest.h"
#include "stub.h"
#include "protect_engines/kubernetes/rest/config/KubeConfig.h"
#include "curl_http/CodeConvert.h"

namespace HDT_TEST {

using namespace KubernetesPlugin;
class KubeConfigTest : public testing::Test {
public:
    void SetUp();
    void TearDown();
    static void SetUpTestCase();
    static void TearDownTestCase();

public:
    // 测试输入数据：Base64加密kubeConfig文件
    const std::string t_codedContents = "";

    // 测试期望数据
    const std::string t_decodedCaCrt = "-----BEGIN CERTIFICATE-----\nMIIHNzCCBR+gAwIBAgIJAMojvDAUZFFkMA0GCSqGSIb3DQEBCwUAMIG0MQswCQYD\nVQQGEwJDTjESMBAGA1UECAwJR3VhbmdEb25nMREwDwYDVQQHDAhTaGVuWmhlbjEl\nMCMGA1UECgwcSHVhd2VpIFRlY2hub2xvZ2llcyBDby4sIEx0ZDEhMB8GA1UECwwY\nT1NTICYgU2VydmljZSBUb29scyBEZXB0MRIwEAYDVQQDDAlPU1MzLjAgQ0ExIDAe\nBgkqhkiG9w0BCQEWEW9zczNjYUBodWF3ZWkuY29tMB4XDTIyMDYwMjAzNDg1NloX\nDTMyMDUzMDAzNDg1NlowgbQxCzAJBgNVBAYTAkNOMRIwEAYDVQQIDAlHdWFuZ0Rv\nbmcxETAPBgNVBAcMCFNoZW5aaGVuMSUwIwYDVQQKDBxIdWF3ZWkgVGVjaG5vbG9n\naWVzIENvLiwgTHRkMSEwHwYDVQQLDBhPU1MgJiBTZXJ2aWNlIFRvb2xzIERlcHQx\nEjAQBgNVBAMMCU9TUzMuMCBDQTEgMB4GCSqGSIb3DQEJARYRb3NzM2NhQGh1YXdl\naS5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDSJDypwyXLHB/5\nmrEhhtY5cOyeNd/QExnvQadZBrGwAy1n9oz7lS9T2FFnzmIXSNJeWTAuM9d2XnCh\n8Y3aihsoR44XU/up3+MatNNgvfs348WnowtkSt2FRa+rxEVguwm8JynuiBf6uW6t\nVghDHKr+Fe+iKs6xb5wqk1YNxLPF5Le2qUFy0TqRH9sZNOidSo9dLdbLL3dvLlpo\nCHSC0c9/w6VT5uSwUzYGNsDrg+jRASZhMEZUNHyEleuwtKJybSvFxiXrdtkxWVZo\niNOgVqMv0X4oQjDpm5oIpohhWXEO5EpjvXtgZ6BmmUT01+dmZwmbS6otR5W8N7HL\nJqI6Pi5EGNHF2b43FPTo2vxGDkHAu4LNH7J6AgxEn2i6FowXH3zJpB0ZenYjuvU6\n7D9Ag+hDnpouBpIQhBDj7QbI5t1qmLOS50MwIp+fZWjUd3ien+LJ8bAvXcrdIyBW\n66ZrS298bYmGWY3kiHgAYcffi/b4c6z2vlUz6nUvo/cZZYkSFXoRUsgKr9szU2vb\nNUtyTw1cM2M28x1Gt/wXfSUyK+WbuWwswDPkCi8eLAOaHf2A8F2FdhGU0HbQfs1I\nVCQ+bUdeSsVf9AyP1RtblWmnswL0G8o7fs72vNmIDvr1legm+LmQBDd5DMMWeCi9\nTRWTC9q2fcRZu5er3OQEX+uBN4wDtQIDAQABo4IBSDCCAUQwHQYDVR0OBBYEFNzU\nrofwFLovdbGux0C7nlM6WF8dMIHpBgNVHSMEgeEwgd6AFNzUrofwFLovdbGux0C7\nnlM6WF8doYG6pIG3MIG0MQswCQYDVQQGEwJDTjESMBAGA1UECAwJR3VhbmdEb25n\nMREwDwYDVQQHDAhTaGVuWmhlbjElMCMGA1UECgwcSHVhd2VpIFRlY2hub2xvZ2ll\ncyBDby4sIEx0ZDEhMB8GA1UECwwYT1NTICYgU2VydmljZSBUb29scyBEZXB0MRIw\nEAYDVQQDDAlPU1MzLjAgQ0ExIDAeBgkqhkiG9w0BCQEWEW9zczNjYUBodWF3ZWku\nY29tggkAyiO8MBRkUWQwDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAQYwHAYDVR0R\nBBUwE4ERb3NzM2NhQGh1YXdlaS5jb20wDQYJKoZIhvcNAQELBQADggIBACTIyDTk\n5pOADdUk3mKcLerZ1FIMykf5KtiANtcLkGf9XSyLYzbsBi6HjnS7ktgWPhGze+hu\nBkIwlwzD5bvc4+eVSl/NAysIIjpRn4ypmEypBCzs1jVBupn3QL5ZgcE0tUtZ3mIl\ntj1jHF0dPvus6o3k32+27m6MLj7+DjaKu2Az5yl3ny+OQ99TRsuPNZuuGuGntp4A\nF+tt6tzm2T80fgfUYO/quHkAI7ae4A4FK4xXmbsYQedaoVXu1EVl454PXGXggm/y\nN24YBk+sTXtNIOnkJd0HGMPoW9NILDMgy+kKUtFAR1296pbXkOzyy5I4pvEjl54V\nuBTmobfEDDP2sWZMdNIRxUSQjVlah2Jr1qKXOd5VH3FT2zxzkHv7tnGnVvQtoj1j\n5mw9mJ+kSkMCqHCT7HX7gRWrt1bK1Q48vQyo6YrNnvzGKgANxv9rGN2KNfzkgBwH\nz91RwOUNzBPyl3mEA/2fsQRF28Esh94fOFIWWG3rXctBE6fxuq5biAtvnGgUJjhW\nGjt57P2DzGy6MtWwQKb6NX1gUbuYAYwo76PI9bzvPyCpCa2ihIxewksYHbpSXBDe\n+gohcIrhzWiNj74C0yMmoLoqduxdeN7wdj89ESYJkYvwRk1EAztaSqamB5gasOOM\n0MFr3NdhrIQ6TFSBPOMEiW0Oe9KSJQp2xYFq\n-----END CERTIFICATE-----\n";
    const std::string t_decodedClientCrt = "-----BEGIN CERTIFICATE-----\nMIIG0zCCBLugAwIBAgIITWWCIQf8/VIwDQYJKoZIhvcNAQELBQAwgbQxCzAJBgNV\nBAYTAkNOMRIwEAYDVQQIDAlHdWFuZ0RvbmcxETAPBgNVBAcMCFNoZW5aaGVuMSUw\nIwYDVQQKDBxIdWF3ZWkgVGVjaG5vbG9naWVzIENvLiwgTHRkMSEwHwYDVQQLDBhP\nU1MgJiBTZXJ2aWNlIFRvb2xzIERlcHQxEjAQBgNVBAMMCU9TUzMuMCBDQTEgMB4G\nCSqGSIb3DQEJARYRb3NzM2NhQGh1YXdlaS5jb20wIBcNMjIwNjAyMDUwMjQ2WhgP\nMjA3MTA2MDIwNTAyNDZaMIGpMQswCQYDVQQGEwJDTjESMBAGA1UECBMJR3VhbmdE\nb25nMREwDwYDVQQHEwhTaGVuWmhlbjElMCMGA1UEChMcSHVhd2VpIFRlY2hub2xv\nZ2llcyBDby4sIEx0ZDEhMB8GA1UECwwYT1NTICYgU2VydmljZSBUb29scyBEZXB0\nMRIwEAYDVQQDEwlPU1MzLjAgQ0ExFTATBgMpAQETDHBhYXMtb20tY29yZTCCAiIw\nDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANUcZIFjwF7fu8j7vFkhVaGUsDZR\nwIog3hDraW9CM6bB6adJuLCrkriGvpNKiUTfiQXMvrUVLogMAiQnI8DdavAkywyn\n18pwpQzcCZnnHO1Xf9xL+GXcGMc06saIDNzwlCvi91W38tUHpkAynVgVm1fth555\ncaMb1UQCY1xr/SHS0eCaJTD4+cyZMJvwDo8UxgNq5kSJUZLCiGzanYbnHUd++nzR\nxoR8cJUyqzf1yWc7Mxu9udatFevc+9LSI56wKG5rT9dGP5Nbw431rnDHQLOuhPK4\nZB82C/Fpfmc4XNolX09YBncDVbCnKdDAnHzjbVztQAPkTh4EuYyuHPWL4BI7W6Ut\ni0rjqTC4e1gm2zfsvbK5NhiRXpNvC5Jg0RmPcA7YN5qioLL/W4n9oBLfsGSnqAnB\nwAKKBrDnwZW3QJFV6rEiY8GOMSYgLiRrsyLLx1V6+0RrkFmCdTSyYh1QAE2XBXTQ\nTOKPGeWoh/AINRsLOtuqMHyWwCTaGi4JHVAml/S9dmwWY57PsK3cGmJJdXTIDF2R\nYgl70Q5XpAeC994oWtFdSGg2u/qkQjwoGxGf4RK7osLt6KAMBR7R+FxrwA6shDiD\n4JeDf7i8YauDjnNpQ3/NoeDJbQEfVZswIwzjQSIOZsfyA4ALhCrr7In4f/BiflhL\nJlMOlcthq7c7/Nn3AgMBAAGjge8wgewwDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQW\nMBQGCCsGAQUFBwMCBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaA\nFNzUrofwFLovdbGux0C7nlM6WF8dMIGLBgNVHREEgYMwgYCCB3BhYXMtb22CAIIb\nKi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsghYqLm9tLnN2Yy5jbHVzdGVyLmxv\nY2FsghoqLm1hbmFnZS5zdmMuY2x1c3Rlci5sb2NhbIcEsBwAAYcEsBwAAocEfwAA\nAYcECCiJB4cECCiJB4cECCiJBzANBgkqhkiG9w0BAQsFAAOCAgEAGLTdPQiOjF3/\nX+/Enz182T+9fKI6mz+KEv7CzcraG/ykpxnYNmXqzQv+92WOqK87qHFxnLGCv/Mt\n2Qt9+NE2vYzTRXaWmRxyMW+TEMs9FUCemheF9YEMo2cLDloRqlx9rCeklXF4TyE0\na0wPRM9EUyYDU8p2xUTwdRLxletUC0iuIipViWW8jwJ1RT//6XDAUsuR+YcNXCit\n0QUyMHetF919Cai928BKlxdavcKrCJRiaEMkCnO7XMnBEscCC8eL+FxFekjsosN9\nR78yqLJgIOxd47HHfAo6eFLKI8IpuEu0Hty8mjKQv3Kik6h5yOSxdszbd16r8Cd2\nfhL+M6he0i/2WD5xSWwLH3Gjs72PzfgkpHj/LhrjyCXRFhixgPKwlLg3S/1lCNcH\nJk1UcAIt29iH+eTAMgmLd8HzlZFgw9OxxNpFhYnsCJBCone8YToGh+uoSKS0WBh+\nMBFOgud387+685Px0VGBUeprtbNi+DFN8IBna5ZNhI2+gjIOfk9kVNp6tcmIrTu3\nRGzE//nM8PncLnZeGUM6vk79czIP3dotPGXLKpZIahA3TiFS5SO1GdWM/8z0soQ8\n+/F2ndlttPRK3GtezSY2pmiBeWZ70uD7fJ72O64GPseOK55OFDxbtUyPo/nv9WWH\n2tiVTvX6dZEthdjOA7W8dKQnXNnFGSc=\n-----END CERTIFICATE-----\n";
    const std::string t_decodedClientKey = "-----BEGIN RSA PRIVATE KEY-----\nMIIJJwIBAAKCAgEA1RxkgWPAXt+7yPu8WSFVoZSwNlHAiiDeEOtpb0IzpsHpp0m4\nsKuSuIa+k0qJRN+JBcy+tRUuiAwCJCcjwN1q8CTLDKfXynClDNwJmecc7Vd/3Ev4\nZdwYxzTqxogM3PCUK+L3Vbfy1QemQDKdWBWbV+2HnnlxoxvVRAJjXGv9IdLR4Jol\nMPj5zJkwm/AOjxTGA2rmRIlRksKIbNqdhucdR376fNHGhHxwlTKrN/XJZzszG725\n1q0V69z70tIjnrAobmtP10Y/k1vDjfWucMdAs66E8rhkHzYL8Wl+Zzhc2iVfT1gG\ndwNVsKcp0MCcfONtXO1AA+ROHgS5jK4c9YvgEjtbpS2LSuOpMLh7WCbbN+y9srk2\nGJFek28LkmDRGY9wDtg3mqKgsv9bif2gEt+wZKeoCcHAAooGsOfBlbdAkVXqsSJj\nwY4xJiAuJGuzIsvHVXr7RGuQWYJ1NLJiHVAATZcFdNBM4o8Z5aiH8Ag1Gws626ow\nfJbAJNoaLgkdUCaX9L12bBZjns+wrdwaYkl1dMgMXZFiCXvRDlekB4L33iha0V1I\naDa7+qRCPCgbEZ/hEruiwu3ooAwFHtH4XGvADqyEOIPgl4N/uLxhq4OOc2lDf82h\n4MltAR9VmzAjDONBIg5mx/IDgAuEKuvsifh/8GJ+WEsmUw6Vy2Grtzv82fcCAwEA\nAQKCAgBh0qWj6ykLo8GsMTm05CNNh1YXqRErloi41YbRRl81Rb++RY3csvUndNqX\n+9fk4IMiQWis8KsqUfDNrZWw2zJSR2FZTtY0G973dy2FEtxpagfMFKdSAmTxVC4M\nsbjN1jT9rDKCi2yRMvCyeUlWfJyREPx21yI9j/ImRL5dV0ibtQ0X/0nhH/hyXUM9\n4USdkxiNyw0mGq5yIo/C/9rdaMs83WGX2Cc6+3AmXFrR1iX8F+WO71kV3N+6I/cI\nP+OP3SbCAMpmc92NA8tRJ5xKMnxVvl9SlyeGWCXFS/p04R9mF0+XuT1GdiZob2M3\naqKqhS7XQCRpZOwixWJy3B147RsODO8hc/kAHw7MgkJQcoq3wMjNoc6M/j+TPOqk\ntbP0VDbbmrqYF3a4+SKkdNK8foPkkJmk6p+LCp5Bxd6S3pQ5zalKShCfVhM5TUaV\ndCucG7V8mc2psLGDkphA1Qyh3oVdrCraXtN8lRB3RPuc/Jfz3nihGoBrCyHq+ZYd\nR6fCu1XQf0XWMJaTN3kqy6Y8Tgh9DRNm51qOPtUNLurMEx8kz0C+e+5SqMxkXxzI\nzb9w2uGnojl47E7pLb4wzogrzfzm/NRa2QSypzqCxHc0jvwygIKHr+I6Gwwyv4lN\nJ6Iv8mD+qXMIXROhyFfJDMX5+zBctoFWGysLKHpJ594Ym7UAwQKCAQEA7dK/QmdS\nYzHYjVaSRdsUhL2twKEUP/Ks3Wrs2VQsFhyoYo/wBnsI2UZcZWiv8qI1xo6Rpz5V\nu5WVmeoQEnC0evUmSjJXEInLtgARHPkHHx8/G8I2Ho65g9M2AZHtPtwBwdU5O7uT\n+5V77Cgje94y+pmJDxpMw/n3RrAdMpPlMCH3Ubzvs5nuBNmW/+boMmaaklwVfikQ\nTojLb5l+wFpLhkD3NTAXBQdJ+zf3hSzhGozyseeyovU8zJQnrwLSalWSJ88zUO5s\nordXKhcbz8f/ev2nfbhn9UhzNaDl916fqBE4jKjgui8fM5iL2wvVmMPFecAw8CWz\nhlxuaQD7hRjpVwKCAQEA5WYfsvjXoMUgqJ87OLwtNrlByQlOCkH+i5YqbHa5RgBs\nPcLOQciDRMw+ghJ+aRURHcoeljfLvyOAp5MdM6xqi1UOgUQrC175Zh8tVSJie0/Q\nDZhALHRk7WKK0Z1RInuUWUGAxrMyrSyBClMrth+A+3ZK06WUpIPnItIOeWnv00St\nV8qyfvuX+jX/J0hebCYvfXKjBXMmUWmNMEoYCkzVHee7VBNB4CFrEB4sWFCD2I77\npIXb82/+DWaLcpGDHHrGO4LxZL/Geu173e0u5tpg7k59PtEKXFs9cCbRe7pYnZyk\nMNeCwCXgtAefrINYhJRZ5JBmX+t5O8+VTgmAs2EQYQKCAQAfvdAPIdEqMh3wB0zw\ni+P6L4LAQf985XvS9ZF1FDnqHZsPxJxJkSRGM5DjbAyHusSooqCoDLbOmZFlAIty\nmp5MBuo8Xuml6G5K9UlTb51WtwnqP4qPm4cBJDCCFyLuD9kgMMA5y7hdjL8EbvsF\nbkupjNJxNJZoVbV+NsU+2eRt/yqOO0RW2UWeWhhAQWZeS7l3rVilBQALK1DTrU3w\niFyqJ4OXErsPzcA/CmI74RiOPZ+qxPzfqRGbUG7Xee3xiUg/jfUQaTIQqZ21nW31\n1oCvvqkbK4CciTXvQ3FOCdAPU3UTuPp9fwqQDV0lODgi8oYp0M/3TWDfnviRhTMM\nuZ1zAoIBAHPGmvEEzi8Bzn3L/2Oe9WLNFPqVi6F5tTJV04tyUAeYZwi0rMxemoG6\nY0Hae5olW8IhJFbESjxpeqEYioBt4Ef54Zwz/1V51X1I9uQkundpzKNP1/OXuuhj\n95PbRfuVS0XQ3WFrR4RHFclUOJduRvaiuRkgVGjDeYAFa/CzGqsR2jqYvoWADS/m\n2KPGzoDetNEnbkdt2kT0dKGOg5uPM3AoaE8CeRjZROOZlt/rot9FKpPaSywNtbal\nrnNgJT/WZv3aFGK4tz+LZByZfDZeuNUNIAD4F7aNBfD4Znl/jwHc8LEF06OOel3i\nCyBSGfavuL62cjSu7zzUg5IjEaV2s4ECggEAFpYtQiUfsEK5aSVN+XfPOhUmKUBD\nQRdrCghr+rHBG7/l2GGORq0v/kAsKr5dQaoi/JYG3rKC6ch6Vik4PX5/ZLEEVVC4\npMZUqYwWO1pAqSy+3ntoxItDM1qoto1Run9f413XiN5ZrCA5Miz4lhiZXbt0Cv56\nHW7YgTGVwIXbbjKsK6FnDpAzqiiS0HgRWFsBE0ERbK2UksviKGQjwEFRVMlpjlCT\nsTef4GlkVrHumR7wxfi5c4XKRXFNwE6ruxhdNGjMje2zK6roEVKSpnibtKJIaYUs\nDzEExT7xq8PkKrDvmVURWugXVrp76WS2z3pdGnUPIgSZHkszZ1aJ0gI5pQ==\n-----END RSA PRIVATE KEY-----\n";
    const std::string t_serverURL = "https://8.40.137.7:5443";
};

void KubeConfigTest::SetUp()
{
}

void KubeConfigTest::TearDown()
{
}

void KubeConfigTest::SetUpTestCase() {}
void KubeConfigTest::TearDownTestCase() {}


/*
 * 测试用例： 获取解析kubeConfig内容成功
 * 前置条件： 输入的kubeconfig文件内容正确
 * CHECK点： kubeConfig中的CA证书、客户端key、客户端CA证书、服务器地址符合期望。
 */
TEST_F(KubeConfigTest, GetConfigs_Success)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(t_codedContents);

    EXPECT_EQ(isInit, true);

    std::string caCrt = kubeConfig.GetClusterCrt();
    EXPECT_EQ(caCrt, t_decodedCaCrt);

    std::string clientCrt = kubeConfig.GetUserCrt();
    EXPECT_EQ(clientCrt, t_decodedClientCrt);

    std::string clientKey = kubeConfig.GetUserKey();
    EXPECT_EQ(clientKey, t_decodedClientKey);

    std::string serverUrl = kubeConfig.GetClusterServer();

    EXPECT_EQ(serverUrl, t_serverURL);

    std::string ip;
    std::string port;
    bool ret = kubeConfig.GetClusterServer(ip, port);
    EXPECT_EQ(ret, true);
    EXPECT_EQ(ip, "8.40.137.7");
    EXPECT_EQ(port, "5443");

    boost::asio::ssl::context ctx{boost::asio::ssl::context::tlsv12_client};
    ret = kubeConfig.SetSSLContext(ctx);
    EXPECT_EQ(ret, true);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeconfig文件未初始化
 * CHECK点： kubeConfig内容未初始化
 */
TEST_F(KubeConfigTest, GetConfigs_Failed)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string());
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeconfig文件非法
 * CHECK点： kubeConfig内容未初始化
 */
TEST_F(KubeConfigTest, GetConfigs_FailedWhenInputIllegalKubeConfig)
{
    std::string illegalInput = std::string("aaa" + t_codedContents);
    auto [isInit, kubeConfig] = KubeConfig::Create(illegalInput);
    EXPECT_EQ(isInit, false);

    std::string ip;
    std::string port;
    bool ret = kubeConfig.GetClusterServer(ip, port);
    EXPECT_EQ(ret, false);
    EXPECT_EQ(ip, "");
    EXPECT_EQ(port, "");

    boost::asio::ssl::context ctx{boost::asio::ssl::context::tlsv12_client};
    ret = kubeConfig.SetSSLContext(ctx);
    EXPECT_EQ(ret, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，为合法的base64字符串，但是是非法的Yaml文件
 * CHECK点： kubeConfig初始失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlLoadExcept)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string("YmluYXJ5AHN0cmluZw=="));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无Context字段
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlNoContext)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string(""));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无current-context字段
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlNoCurrentContext)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string(""));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无clusters字段
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlNoClusters)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string(""));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无users字段
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlNoUsers)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string("a2luZDogQ29uZmlnCmFwaVZlcnNpb246IHYxCmNsdXN0ZXJzOgotIGNsdXN0ZXI6CiAgICBjZXJ0aWZpY2F0ZS1hdXRob3JpdHktZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaE9la05EUWxJclowRjNTVUpCWjBsS1FVOUJXbEp3TlRWU1NWQnJUVUV3UjBOVGNVZFRTV0l6UkZGRlFrTjNWVUZOU1Vjd1RWRnpkME5SV1VRS1ZsRlJSMFYzU2tSVWFrVlRUVUpCUjBFeFZVVkRRWGRLVWpOV2FHSnRaRVZpTWpWdVRWSkZkMFIzV1VSV1VWRklSRUZvVkdGSFZuVlhiV2hzWW1wRmJBcE5RMDFIUVRGVlJVTm5kMk5UU0Zab1pESldjRWxHVW14Wk1taDFZako0ZGxveWJHeGplVUpFWW5rMGMwbEZlREJhUkVWb1RVSTRSMEV4VlVWRGQzZFpDbFF4VGxSSlExbG5WVEpXZVdSdGJHcGFVMEpWWWpJNWMyTjVRa1ZhV0VJd1RWSkpkMFZCV1VSV1VWRkVSRUZzVUZVeFRYcE1ha0ZuVVRCRmVFbEVRV1VLUW1kcmNXaHJhVWM1ZHpCQ1ExRkZWMFZYT1hwamVrNXFXVlZDYjJSWFJqTmFWMnQxV1RJNWRFMUNORmhFVkVsNVRVUm5lRTFVUVhoT1ZHdDRUMVp2V0FwRVZFMTVUVVJuZDA5RVFYaE9WR3Q0VDFadmQyZGlVWGhEZWtGS1FtZE9Wa0pCV1ZSQmEwNVBUVkpKZDBWQldVUldVVkZKUkVGc1NHUlhSblZhTUZKMkNtSnRZM2hGVkVGUVFtZE9Wa0pCWTAxRFJrNXZXbGMxWVdGSFZuVk5VMVYzU1hkWlJGWlJVVXRFUW5oSlpGZEdNMXBYYTJkV1IxWnFZVWMxZG1KSE9XNEtZVmRXZWtsRlRuWk1hWGRuVkVoU2EwMVRSWGRJZDFsRVZsRlJURVJDYUZCVk1VMW5TbWxDVkZwWVNqSmhWMDVzU1VaU2RtSXllSHBKUlZKc1kwaFJlQXBGYWtGUlFtZE9Wa0pCVFUxRFZUbFVWWHBOZFUxRFFrUlJWRVZuVFVJMFIwTlRjVWRUU1dJelJGRkZTa0ZTV1ZKaU0wNTZUVEpPYUZGSGFERlpXR1JzQ21GVE5XcGlNakIzWjJkSmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUTBSM1FYZG5aMGxMUVc5SlEwRlJRMmRMWWs4eWVWUlZNbVUwUlhnS09YVnNZbGRIUlV0dmRVUk9jbGw0VDFSTmJERTBWRVZuTlRaVlRuWlhOemxJVmpGeVFUZE9hMll2WW5vNWR6TXJPRGc0TjBjd1kzQm5iMFJ5VldGeGFBcHdhMkZZZEc1QmFWSXdSRTFyTmtabGIxaE5WWFpJY0RkWmJuQlpUSGxYT1ZjNFYxTlFVMlpVU2t0R0wwbEVTRVoyVVdwMFNuSjZUMFJCYkRCdWRWbHVDa1JPZFdKSE4xZGljM05UV0VWSWQyNXNSMHBSYjJ4QlZrVTBXVXhDTDNGbVlVaFBWak55T0hkQlZuRnBTM1l6VkROdlVsWXhlVXBqYlhoaU5uVk9SbmNLZFdGSFdqbHZNVnBHY2pkdVFrWmhWR0ZYZDFOMlNUSkdZWE0zYjFCeVNYSnhaa1puZUd4cVdXdHVUV2xCTURRd1YzRndRMlFyUTJrdlFXSnhRMGMwZHdwSk0yZGFlRlJSVldwTWRXaG9SSE5JVTFKeU1tcFNNV3BaTTBKMFJuQlhkMHREVW5aMWVTOUtZWFZYUmpOd2J6WlhRbHAxUWpoQlJteGtTbUpoVkZSU0NuSkhVV3d5YW1wcllYQkpOVzEyUzNGM1YzRmtUM0phWkd4aVEyd3JiSFJTZFRsSWFWWnFMMnQyVldKMGJ5dGpORXhCVEZGeVpERktUMlF5UnpWalZrc0tSbmg0ZW1oM1pXMVBVWE54Ym5GcldUUnlWV3ByZUdJeWIwdGxjM0JHV1RGYWFFWkRSMlE0UWpkM1lsbFJla3hCZHpBNGVUWndjelE0U1VWT1RrVnlUQXBxUzBnMFpWaHdjVkJ3Y21WTlVGZ3hPRGw1TWpONVVqbEhUV2N3YzA0NU9UVXhRVmc1UldFMWVUaFZlRmwyVTJ0aGJHbDNkWHB0VlRsQmRuVlFabTk1Q2tJM1kydDJaek5VVURac1NsSm9lQ3RqVDJ0blNTdHZUbnB4UTNKSlUyRXpRbkZvZUZKVUsxcG5SbFJJVFdsblkwdzRiSEpKWkdNNVduSldiSGcyTTJ3S2NrNUZaa1JvWjNoaU1DOWhjakJWTDI1M09EVlVVSHBsTVdGMFFqQnJSV2hGU1V0eUwyTkdka1oyUXpWWVVHUkVkWFZYUm5wNlNHRnhXRWN6UlRseU53cDNNVXh5Um5aU2JWVkdjVU40U0dreVlqbDFXRTU2ZUVVd1kwRm9VWGRKUkVGUlFVSnZORWxDVTBSRFEwRlZVWGRJVVZsRVZsSXdUMEpDV1VWR1FXMUdDa2MwUTB4NFozVjRNamRyYVdzeFZsWTJaR2g0TjJkdmEwMUpTSEJDWjA1V1NGTk5SV2RsUlhkblpEWkJSa0Z0UmtjMFEweDRaM1Y0TWpkcmFXc3hWbFlLTm1Sb2VEZG5iMnR2V1VjMmNFbEhNMDFKUnpCTlVYTjNRMUZaUkZaUlVVZEZkMHBFVkdwRlUwMUNRVWRCTVZWRlEwRjNTbEl6Vm1oaWJXUkZZakkxYmdwTlVrVjNSSGRaUkZaUlVVaEVRV2hVWVVkV2RWZHRhR3hpYWtWc1RVTk5SMEV4VlVWRFozZGpVMGhXYUdReVZuQkpSbEpzV1RKb2RXSXllSFphTW14c0NtTjVRa1JpZVRSelNVVjRNRnBFUldoTlFqaEhRVEZWUlVOM2QxbFVNVTVVU1VOWloxVXlWbmxrYld4cVdsTkNWV0l5T1hOamVVSkZXbGhDTUUxU1NYY0tSVUZaUkZaUlVVUkVRV3hRVlRGTmVreHFRV2RSTUVWNFNVUkJaVUpuYTNGb2EybEhPWGN3UWtOUlJWZEZWemw2WTNwT2FsbFZRbTlrVjBZeldsZHJkUXBaTWpsMFoyZHJRVFJDYkVkdWJteEZaeXRSZDBSQldVUldVakJVUWtGVmQwRjNSVUl2ZWtGTVFtZE9Wa2hST0VWQ1FVMURRVkZaZDBoQldVUldVakJTQ2tKQ1ZYZEZORVZTWWpOT2VrMHlUbWhSUjJneFdWaGtiR0ZUTldwaU1qQjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRVVJuWjBsQ1FVZEJVWGx6YUdnS2EzSlBZVXBHZEV0aFRHVlJjalpxU0hCT1pXbHZNM05ZTjAxcU1GZzJkSGt4VG5Kd2N5OW5NMkpEV2tjNVZpdG5kWEJXTlV0bU1VaFNaRmRuVmxRemJncEljMUZXVW5sV1VFWkVPVFpGVVhvcmNVRk1aVk5uUld4SWVFdHVTakZQYjJZMU1rcFpiSFJpTTNOMkwwbEJWbGRYVG5SRFYwWm5ObU56U2s1c2VtTXJDbU5FTVVoelkzZFdOemRoY1RWTE1rTkJhVmQ0VkUxMFQxRnlTVzlYVHk5aFdFMURVREJMV1hoalN6Rk1NMFE1V1doc1UzTjNNamwzZUU5blpVVTRWSEFLTkZCUk5tUXhNMFJaYW5nemFEUldSamxoTDBwTVZ6ZzRPRVpoTjNCUE9FbzVRMjFrY0VKV2VYY3ljblJDVFZoSVdrUlliVFI1UkVwNFIzTjRTbE5ZZWdwclVHYzFjemRJVGtoQlRXcHROVEZ1TnpkWWMwcEZiMWRCUm5GVVNrYzNWelpXWVU4MFYxbDZVa0pqZUhWdVRFOWhSM0p5ZEU4eVRVaEZkRGhqU21aQ0NrMHlaR3hYU3pKelRFOUxOV2h4Y2tKQksxTkdlRzl4U0dWNVlqZE9WRGhZUjNVNU5DdFNVazVPTlZOeGVXeFZVRTlzTW14S1ZVWldlbUYxVVRWWWJqTUtSR1Z2V2k5YVdtNVZjWEJHTkV4RlVtcGlNMWRwZEU5cWFsUmpXSHA2U1hkWGNTdGFSMlZKY0hkNlZFeHNVekZITVVZeFJrUkhZa2Q0VWtaWVMwTnVjUXBrUkhWSE1HbHFSVk52Ulc5VVZEWXdZVzVRTmk5bU5HeFdTVXBTY0RsUFJHNHlhMFZQVkZSM1dYbDVNVEJtYVNzMk5qQm5UVTlQTVRKb1NEWlJRbVI1Q25kSWNuQnlaR3h4VVVvNVFVNVFUMnN2TW1aalVuWnFUazlPWkZZclFWQm5Ta3RCYTJ0aFZFRk1TbUkyVHk5M0wxVnJSR2RZVHpSaFdsTklPR0kzTUVjS1YzUk9PRUl4YTA1VFptZENWWEUyZDNSTllraFVhMjF6Um1WbVpsbFNVbkJRTDIxbFpFbFNWbG92UTFKQ2EyZHNXVE5NT0dOS0wwMVVUQzh6VkRWQlJncG1iSGRZVVRWMWFEWllhRFIzUlhKaWR6VkxaV1ZUV2twTlEwZFJjRlZyT0hOaWJrTUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly84LjQwLjEyOS4xOTE6NTQ0MwogIG5hbWU6IGNsdXN0ZXIKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGNsdXN0ZXIKICAgIHVzZXI6IGNmZS1tYXN0ZXIKICBuYW1lOiBkZWZhdWx0Q29udGV4dApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHRDb250ZXh0Cg=="));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无cluster的crt无法base64解码
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlClusterCrtIllegal)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string(""));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无user的crt无法base64解码
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlUserCrtIllegal)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string(""));
    EXPECT_EQ(isInit, false);
}

/*
 * 测试用例： 获取解析kubeConfig内容失败
 * 前置条件： kubeConfig输入异常，Yaml中无user的key无法base64解码
 * CHECK点： kubeConfig初始化失败
 */
TEST_F(KubeConfigTest, Create_Failed_WhenYamlUserKeyIllegal)
{
    auto [isInit, kubeConfig] = KubeConfig::Create(std::string("==="));
    EXPECT_EQ(isInit, false);
}
}
