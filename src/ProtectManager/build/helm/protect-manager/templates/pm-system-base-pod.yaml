{{/*
   Get running environment
  */}}
  {{- $environment:= "" }}
  {{- if .Values.global }}
  {{- $environment = .Values.global.environment }}
  {{- else }}
  {{- $environment = .Values.local.environment }}
  {{- end }}
  {{- $storageip:= "" }}
  {{- if eq $environment "Dorado" }}
  {{- $storageip = "127.0.0.1" }}
  {{- else }}
  {{- $storageip = .Values.global.storageip }}
  {{- end }}

  {{- $storageuser:= "" }}
  {{- if .Values.global }}
  {{- $storageuser = .Values.global.storageuser }}
  {{- else }}
  {{- $storageuser = "admin"}}
  {{- end }}

  {{- $storagepwd:= "" }}
  {{- if .Values.global }}
  {{- $storagepwd = .Values.global.storagepwd }}
  {{- else }}
  {{- $storagepwd = ""}}
  {{- end }}

  {{- $hostIp:= "" }}
  {{- if .Values.global }}
  {{- $hostIp = .Values.global.hostIp }}
  {{- else }}
  {{- $hostIp = "0.0.0.0"}}
  {{- end }}

  {{- $realreplicas:= "" }}
  {{- if .Values.global }}
  {{- $realreplicas = .Values.global.replicas }}
  {{- else }}
  {{- $realreplicas = .Values.local.replicas }}
  {{- end }}

{{- $deploytype:= include "getDeployType" . | default "" }}
{{- if or (eq $deploytype "a8000") (eq $deploytype "d0") (eq $deploytype "cloudbackup") (eq $deploytype "d3") (eq $deploytype "d4")}}

kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    app: protectmanager-system-base
  name: protectmanager-system-base
  namespace: dpa
spec:
  {{- if eq $deploytype "d4" }}
  replicas: 1 # d4形态从618版本开始PM改成单实例
  {{- else}}
  replicas: {{$realreplicas}}
  {{- end}}
  podManagementPolicy: "Parallel"
  serviceName: protectmanager-system-base
  selector:
    matchLabels:
      app: protectmanager-system-base
  template:
    metadata:
      labels:
        app: protectmanager-system-base
      annotations:
        co.elastic.logs/processors.decode_json_fields.fields.1: message
        co.elastic.logs/processors.decode_json_fields.target: ""
        co.elastic.logs/processors.decode_json_fields.overwrite_keys: "true"
    spec:
      serviceAccountName: pm-base-sa
      {{- if eq $environment "Dorado" }}
      {{- if eq $deploytype "d4" }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - protectmanager-biz-service
                topologyKey: kubernetes.io/hostname
              weight: 90
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - gaussdb
                topologyKey: kubernetes.io/hostname
              weight: 100
      {{- end}}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      dnsConfig:
        options:
          - name: single-request-reopen
          - name: attempts
            value: '5'
      {{- end }}
      terminationGracePeriodSeconds: 0
      securityContext:
        fsGroup: 99
        {{- if eq $environment "Dorado" }}
        seccompProfile:
          type: RuntimeDefault
        {{- end }}
      initContainers:
        - name: pm-database-version-migration
          image: pm-database-version-migration:{{ .Values.global.version }}
          command: [ "/bin/sh", "-c", "if [ ! -d '/opt/OceanProtect/logs/${NODE_NAME}/protectmanager' ];then mkdir -p /opt/OceanProtect/logs/${NODE_NAME}/protectmanager;fi && chown 99:99 /opt/OceanProtect/logs/${NODE_NAME} && chmod 750 /opt/OceanProtect/logs/${NODE_NAME} && chown 99:99 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager && chmod 750 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager && if [ ! -d '/opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Nginx' ];then mkdir -p /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Nginx;fi && chown 65500:99 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Nginx && chmod 750 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Nginx && if [ ! -d '/opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_GUI' ];then mkdir -p /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_GUI;fi && chown 15012:99 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_GUI && chmod 750 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_GUI && if [ ! -d '/opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Data_Protection_Service' ];then mkdir -p /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Data_Protection_Service;fi && chown 15013:99 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Data_Protection_Service && chmod 750 /opt/OceanProtect/logs/${NODE_NAME}/protectmanager/PM_Data_Protection_Service && su nobody -s /bin/bash -c 'cd /context/src/ && python3 -m app' && chown 99:99 /opt/ProtectManager && chmod 770 /opt/ProtectManager && chown 99:99 /opt/OceanProtect/logs/*/protectmanager && if [ -d '/opt/ProtectManagerNas' ];then chown 99:99 /opt/ProtectManagerNas;fi && if [ -d '/opt/ProtectManagerAgentLog' ];then chown 99:99 /opt/ProtectManagerAgentLog;fi && if [ -d '/opt/ProtectManager/report' ];then chown 99:99 /opt/ProtectManager/report;fi && if [ -d '/opt/third_data' ];then chown 99:99 /opt/third_data && chmod 750 /opt/third_data;fi" ]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICE_MODE
              value: product
            - name: LOGLEVEL
              value: DEBUG
            - name: GAUSS_DB_SERVER
              value: "gaussdb:6432"
            - name: POSTGRES_PORT
              value: "6432"
            - name: POSTGRES_SERVER
              value: "infrastructure"
            - name: DEPLOY_TYPE
              value: {{$deploytype}}
          volumeMounts:
            - mountPath: /opt/OceanProtect/
              name: nas-path
            - mountPath: /opt/ProtectManager/
              name: pm-path
            - mountPath: /opt/ProtectManagerNas/
              name: pm-path2
            {{- if eq $deploytype "d0" }}
            - mountPath: /opt/ProtectManagerAgentLog/
              name: pm-agent-log
            - mountPath: /opt/ProtectManager/report/
              name: report-path
            - mountPath: /opt/third_data/
              name: data-nas
            {{- end }}
            - mountPath: /opt/config
              name: common-volume
              readOnly: true
            - mountPath: /OSM/conf
              name: dorado-config-dir
              readOnly: true
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
      containers:
        - name: pm-nginx
          command: [ "/bin/sh", "-c", "sh script/start.sh && chmod 550 /usr/local/nginx/nginx && chmod 440 /usr/local/nginx/conf/nginx.conf && rm -rf /tmp/nginx"]
          image: pm-nginx:{{ .Values.global.version }}
          ports:
            - containerPort: 30093
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            exec:
              command:
              - sh
              - script/check_live.sh
            initialDelaySeconds: 30
            {{- if eq $deploytype "d4" }}
            periodSeconds: 60
            {{- else }}
            periodSeconds: 30
            {{- end }}
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 30093
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          securityContext:
            {{- if eq $environment "Dorado" }}
            seccompProfile:
              type: RuntimeDefault
            {{- end }}
            readOnlyRootFilesystem: true
            runAsUser: 65500
            capabilities:
              add:
                - SYS_ADMIN
              drop: [ "NET_RAW", "SETFCAP", "KILL", "MKNOD", "FOWNER" ]
          volumeMounts:
            - mountPath: /opt/OceanProtect/
              name: nas-path
            - mountPath: /opt/ProtectManager/
              name: pm-path
            - mountPath: /tmp
              name: pm-nginx-tmp
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
          {{- if eq $environment "Dorado" }}
          resources:
            requests:
              memory: "200Mi"
              cpu: "0.5"
            limits:
              memory: "200Mi"
              {{- if eq $deploytype "d4" }}
              cpu: "1"
              {{- else}}
              cpu: "0.5"
              {{- end}}
          {{- end }}
        - name: pm-system-base
          image: pm-system-base:{{ .Values.global.version }}
          readinessProbe:
            exec:
              command:
                - sh
                - check_ready.sh
            failureThreshold: 10
            periodSeconds: 35
            timeoutSeconds: 30
          command: ["/bin/sh", "-c", "while true;do sleep 1;prc_num=$(ps -ef | grep java | grep -v grep | grep app.jar | wc -l);if [ $prc_num == 0 ];then cd /app;sh app.sh;fi;done"]
          livenessProbe:
            exec:
              command:
                - sh
                - check_health.sh
            initialDelaySeconds: 300
            periodSeconds: 35
            timeoutSeconds: 30
          securityContext:
            {{- if eq $environment "Dorado" }}
            seccompProfile:
              type: RuntimeDefault
            {{- end }}
            readOnlyRootFilesystem: true
            runAsUser: 99
            capabilities:
              add:
                - SYS_ADMIN
                - SYS_TIME
              drop: [ "NET_RAW", "CHOWN", "SETFCAP", "KILL", "MKNOD" ]
          ports:
            - containerPort: 30081
              name: pm-base-port
          volumeMounts:
            - mountPath: /opt/OceanProtect/
              name: nas-path
            - mountPath: /opt/ProtectManager/
              name: pm-path
            - mountPath: /opt/ProtectManagerNas/
              name: pm-path2
            {{- if eq $deploytype "d0" }}
            - mountPath: /opt/ProtectManagerAgentLog/
              name: pm-agent-log
            - mountPath: /opt/third_data/
              name: data-nas
            {{- end }}
            - mountPath: /etc/localtime
              name: date-config-localtime
            - mountPath: /opt/config
              name: common-volume
              readOnly: true
            {{- if eq $deploytype "d0" }}
            - mountPath: /opt/cluster_config
              name: cluster-volume
              readOnly: true
            {{- end }}
            - mountPath: /OSM/conf
              name: dorado-config-dir
              readOnly: true
            - mountPath: /tmp
              name: pm-system-base-tmp
            - mountPath: /tmp/share/
              name: index-dir
            - mountPath: /kmc_conf
              name: kmc-conf
              readOnly: true
            {{- if eq $deploytype "d0" }}
            - mountPath: /opt/ProtectManager/report/
              name: report-path
            {{- end }}
            {{- if eq $deploytype "d0" }}
            - mountPath: /etc/adjtime
              name: adjtime-path
            {{- end }}
          envFrom:
              - configMapRef:
                  name: protect-manager-conf
          {{- if eq $environment "Dorado" }}
          resources:
            requests:
              {{- if eq $deploytype "d0" }}
              dorado/dev_rtc: 1
              {{- end }}
              memory: "4.5Gi"
              {{- if eq $deploytype "d4" }}
              cpu: "1.5"
              {{- else}}
              cpu: "2"
              {{- end}}
            limits:
              {{- if eq $deploytype "d0" }}
              dorado/dev_rtc: 1
              {{- end }}
              memory: "4.5Gi"
              cpu: "2.0"
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_MODE
              value: product
            - name: env.support.keys
              value: repository.storage.ip,repository.storage.username,repository.storage.password,repository.storage.port,repository.storage.protocol,anybackup.url,anybackup.authorizations
            - name: repository.storage.ip
              value: {{$storageip}}
            - name: repository.storage.username
              value: {{$storageuser}}
            - name: repository.storage.password
              value: {{$storagepwd}}
            - name: repository.storage.port
              value: "8088"
            - name: runtime.env
              value: {{$environment}}
            - name: server.port
              value: "30081"
            - name: server.address
              value: {{$hostIp}}
            - name: APP_VERSION
              value: {{.Values.imageVersion}}
            - name: spring.profiles.active
              value: real, common, token
            - name: anybackup.url
              value: protect-engine-a-business-control
            - name: anybackup.port
              value: "9088"
            - name: pm.register.port
              value: "25082"
            - name: LOGLEVEL
              value: DEBUG
            - name: DB_ENCODING
              value: "SQL_ASCII"
            - name: POSTGRES_PORT
              value: "6432"
            - name: POSTGRES_SERVER
              value: "gaussdb"
            - name: KAFKA_DEFAULT_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: REDIS_SENTINEL_HOST
              value: "infrastructure"
            - name: REDIS_SENTINEL_PORT
              value: "6369"
            - name: SCHEDULER_MISFIRE_GRACE_SEC
              value: "300"
            - name: SERVICE_PORT
              value: "8094"
            - name: DEPLOY_TYPE
              value: {{$deploytype}}
            {{- if .Values.global.region_id }}
            - name: REGION_ID
              value: {{ .Values.global.region_id }}
            {{- end }}
            {{- if .Values.global.domain_name }}
            - name: GLOBAL_DOMAIN_NAME
              value: {{ .Values.global.domain_name }}
            {{- end }}
            {{- if .Values.global.external_domain_name }}
            - name: EXTERNAL_GLOBAL_DOMAIN_NAME
              value: {{ .Values.global.external_domain_name }}
            {{- end }}
      volumes:
        - name: pm-nginx-tmp
          emptyDir: {}
        - name: pm-system-base-tmp
          emptyDir: {}
        - name: dorado-config-dir
          hostPath:
            path: /OSM/conf/
        - name: kmc-conf
          configMap:
            name: kmc-store-conf
            defaultMode: 0600
        {{- if eq $environment "Dorado" }}
        - name: nas-path
          persistentVolumeClaim:
            claimName: "comm-nas"
        - name: index-dir
          persistentVolumeClaim:
            claimName: "dee-nas"
        - name: pm-path
          persistentVolumeClaim:
            claimName: "pm-nas2"
        - name: pm-path2
          persistentVolumeClaim:
            claimName: "pm-nas"
        {{- if eq $deploytype "d0" }}
        - name: pm-agent-log
          persistentVolumeClaim:
            claimName: "pm-nas3"
        - name: data-nas
          persistentVolumeClaim:
            claimName: "data-nas"
        {{- end }}
        {{- if eq $deploytype "d0" }}
        - name: report-path
          persistentVolumeClaim:
            claimName: "pm-report"
        {{- end }}
        {{- else }}
        - name: nas-path
          hostPath:
            path: /opt/OceanProtect/
        - name: pm-path
          hostPath:
            path: /opt/ProtectManager/
        - name: pm-path2
          hostPath:
            path: /opt/ProtectManagerNas/
        {{- if eq $deploytype "d0" }}
        - name: pm-agent-log
          hostPath:
            path: /opt/ProtectManagerAgentLog/
        - name: data-nas
          hostPath:
            path: /opt/third_data/
        {{- end }}
        {{- if eq $deploytype "d0" }}
        - name: report-path
          hostPath:
            path: /opt/ProtectManager/report/
        {{- end }}
        - name: index-dir
          hostPath:
            path: /tmp/share/
        {{- end }}
        - name: date-config-localtime
          hostPath:
            path: /etc/localtime
        {{- if eq $deploytype "d0" }}
        - name: adjtime-path
          hostPath:
            path: /etc/adjtime
        {{- end }}
        - name: common-volume
          configMap:
            name: common-conf
        - name: config-volume
          configMap:
            name: protect-manager-conf
            defaultMode: 0640
        {{- if eq $deploytype "d0" }}
        - name: cluster-volume
          configMap:
            name: cluster-conf
        {{- end }}
{{- end }}
