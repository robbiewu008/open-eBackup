apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    emei_stor: 'True'
    k8s-app: scheduler
  name: {{ include "pm-data-protection-service.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      k8s-app: pm-data-protection-service
  template:
    metadata:
      annotations:
        co.elastic.logs/processors.decode_json_fields.fields.1: message
        co.elastic.logs/processors.decode_json_fields.overwrite_keys: 'true'
        co.elastic.logs/processors.decode_json_fields.target: ''
      labels:
        emei_stor: 'True'
        k8s-app: pm-data-protection-service
        name: lala
    spec:
      containers:
      - env:
        - name: SERVICE_MODE
          value: {{ .Values.serviceMode }}
        - name: GAUSSDB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: gaussdb
        - name: GAUSSDB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: gaussdb
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_URL
              name: service-env-config
        - name: KAFKA_BROKER_ADDR
          valueFrom:
            configMapKeyRef:
              key: KAFKA_BROKER_ADDR
              name: service-env-config
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IS_TESTING
          value: {{ .Values.isTesting }}
        image: {{ template "pm-data-protection-service.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: pm-data-protection-service
        resources: {{- toYaml .Values.resources | nindent 12 }}
