swagger: '2.0'
info:
  version: v1
  title: 用户管理接口
  contact: {}
  license: {}
host: localhost
basePath: /
tags:
  - name: ${auth-api}
    description: 认证模块
  - name: ${role-api}
    description: 角色管理
  - name: ${security-api}
    description: 安全策略
  - name: ${users-api}
    description: 用户管理
  - name: ${role-auth-api}
    description: 角色权限管理
paths:
  /v1/auth/certificate:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${auth-api}
      summary: 获取证书
      operationId: certificateUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/auth/token:
    post:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${auth-api}
      summary: 获取token
      operationId: genTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: authRequest
          description: 认证请求体
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
            originalRef: AuthRequest
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginResponseBody'
            originalRef: LoginResponseBody
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/auth/dynamic-code/action/send:
    post:
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${auth-api}
      summary: 发送邮件动态口令
      operationId: sendDynamicCode
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: authRequest
          description: 认证请求体
          required: true
          schema:
            $ref: '#/definitions/SendDynamicCodeRequest'
            originalRef: SendDynamicCodeRequest
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/auth/token/verify/action:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      x-auditor-role: 'N'
      tags:
        - ${auth-api}
      summary: 校验token
      operationId: verifyTokenUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/roles:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${role-api}
      summary: 批量查询角色
      operationId: getUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: conditions
          in: query
          required: false
          type: string
          description: roleName:角色名称；userId：用户id；language：系统语言类型，英文：en，中文：cn
        - name: pageNo
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
        - name: orders
          in: query
          required: false
          type: string
          description: +user_num：角色关联的用户数量，升序
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageListResponse_Role'
            originalRef: RoleListReponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    post:
      tags:
        - ${role-api}
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 创建角色接口
      operationId: createRole
      parameters:
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/RoleRequest'
      responses:
        '200':
          description: ''
          schema:
            type: string
    delete:
      tags:
        - ${role-api}
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 删除角色接口
      operationId: deleteRole
      parameters:
        - name: RoleDeleteRequest
          in: body
          required: true
          description: 删除角色接口请求类
          schema:
            $ref: '#/definitions/RoleDeleteRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
  /v1/roles/{id}:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      x-auditor-role: 'Y'
      tags:
        - ${role-api}
      summary: 查询指定角色
      operationId: getRoleByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: id
          in: path
          description: 角色ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleBo'
            originalRef: RoleBo
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    put:
      tags:
        - ${role-api}
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 更新角色接口
      operationId: updateRole
      parameters:
        - name: id
          in: path
          required: true
          type: string
          minLength: 1
          maxLength: 64
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/RoleRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
  /v1/roles/{id}/users:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      x-auditor-role: 'Y'
      tags:
        - ${role-api}
      summary: 查询角色关联的用户列表
      operationId: getUserListByRoleIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: id
          in: path
          description: 角色ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: query
          description: 分页数量
          required: false
          type: integer
          format: int32
          x-example: 20
        - name: startIndex
          in: query
          description: 分页起始页面
          required: false
          type: integer
          format: int32
          x-example: 0
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserListReponseBody«UserResponseBody»'
            originalRef: UserListReponseBody«UserResponseBody»
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 查询安全策略
      operationId: getUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPolicyBo'
            originalRef: SecurityPolicyBo
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    put:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 修改安全策略
      operationId: modifyUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: vo
          description: 安全策略请求体
          required: true
          schema:
            $ref: '#/definitions/SecurityPolicyBo'
            originalRef: SecurityPolicyBo
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security/featureSwitch:
    post:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 修改特性开关
      operationId: updateFeatureSwitchUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: featureSwitchRequest
          description: 特性开关请求体
          required: true
          schema:
            $ref: '#/definitions/FeatureSwitchRequest'
            originalRef: FeatureSwitchRequest
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security/featureSwitch/{featureName}:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 查询特性开关
      operationId: getFeatureSwitchUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: featureName
          in: path
          description: 特性名称
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureSwitchResponseBody'
            originalRef: FeatureSwitchResponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security/securityIp:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 查询可访问IP列表
      operationId: getSecurityIpsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetSecurityIpResponseBody'
            originalRef: GetSecurityIpResponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    post:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 修改可访问IP列表
      operationId: updateSecurityIpsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: securityIpListRequest
          description: 访问控制请求体
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SecurityIpRequest'
              originalRef: SecurityIpRequest
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security/weakpassword:
    post:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 新增弱口令
      operationId: addWeakPasswordUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: weakPasswordAddRequest
          description: 新增弱密码请求体
          required: true
          schema:
            $ref: '#/definitions/WeakPasswordAddRequest'
            originalRef: WeakPasswordAddRequest
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/security/weakpassword/{id}:
    delete:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 删除弱口令
      operationId: deleteWeakPasswordUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: id
          in: path
          description: 弱口令id
          required: true
          type: string
          maxLength: 32
          minLength: 32
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization:
            - global
  /v1/security/weakpasswords:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${security-api}
      summary: 查询弱口令字典
      operationId: getWeekPasswordsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetWeakPasswordsResponseBody'
            originalRef: GetWeakPasswordsResponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 批量查询用户
      operationId: getAllUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: orderBy
          in: query
          description: 排序字段名称
          required: false
          type: string
          x-example: userName
        - name: orderType
          in: query
          description: 排序的方式：asc：升序，desc：降序
          required: false
          type: string
          pattern: (asc)|(desc)
        - name: pageSize
          in: query
          description: 分页数量
          required: false
          type: integer
          format: int32
          x-example: 20
          minimum: 0
        - name: startIndex
          in: query
          description: 分页起始页面
          required: false
          type: integer
          format: int32
          x-example: 0
          minimum: 0
        - name: filter
          in: query
          required: false
          description: 过滤条件
          type: string
          pattern: /^\s*\{[\s\S]*\}\s*$/
          minLength: 0
          maxLength: 1024
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserListReponseBody«UserResponseBody»'
            originalRef: UserListReponseBody«UserResponseBody»
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    post:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 创建用户
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: user
          description: 创建用户信息请求体
          required: true
          schema:
            $ref: '#/definitions/UserRequestBody'
            originalRef: UserRequestBody
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponseBody'
            originalRef: UserResponseBody
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{logoutType}/action/logout:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      x-auditor-role: 'N'
      tags:
        - ${users-api}
      summary: 登出记录日志
      operationId: logoutUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: logoutType
          in: path
          description: 用户登出类型  MANUAL or TIMEOUT
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{userId}:
    get:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${users-api}
      summary: 查询单个用户
      operationId: getUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserInnerResponseBody'
            originalRef: UserInnerResponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
    put:
      x-dr-role: 'Y'
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      tags:
        - ${users-api}
      summary: 修改用户信息
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
        - in: body
          name: userRequest
          description: 更新用户信息请求体
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequestBody'
            originalRef: UpdateUserRequestBody
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
      deprecated: false
    delete:
      x-dr-role: 'Y'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 删除用户
      operationId: deleteUserUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
        - name: isCleanAllResources
          in: query
          required: false
          description: 是否删除SAML用户关联资源
          type: boolean
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization:
            - global
  /v1/users/{userId}/action/lock:
    put:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 锁定用户
      operationId: lockUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{userId}/action/reset_password:
    put:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 重置用户密码
      operationId: resetPasswordUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: password
          description: 重置密码请求体
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequestBody'
            originalRef: ResetPasswordRequestBody
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{userId}/action/unlock:
    put:
      x-dr-role: 'N'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 解锁用户
      operationId: unlockUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: password
          description: 当前登录的系统管理员的密码。
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{userId}/action/update_password:
    put:
      x-dr-role: 'Y'
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 修改用户密码
      operationId: updatePasswordUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
        - in: body
          name: passwordRequest
          description: 修改密码请求体
          required: true
          schema:
            $ref: '#/definitions/UpdatePasswordRequestBody'
            originalRef: UpdatePasswordRequestBody
        - name: userId
          in: path
          description: 用户ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/users/{userId}/email:
    put:
      x-dr-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 修改密码找回邮箱
      description: 修改系统管理员密码找回邮箱
      operationId: updateEmailUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: 用户id
        - name: pwdRetrievalEmailRequest
          in: body
          required: false
          description: 密码找回邮箱请求体
          schema:
            $ref: '#/definitions/PwdRetrievalEmailRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '403':
          description: Forbidden
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
          examples:
            application/json:
              errorCode: '1677931527'
              errorMessage: xxx
              parameters: []
        '502':
          description: Bad Gateway
          schema:
            type: string
    get:
      x-dr-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      tags:
        - ${users-api}
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 获取密码找回邮箱
      description: 获取指定用户的密码找回邮箱
      operationId: getEmailUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: 用户id
      responses:
        '200':
          description: 用户密码找回邮箱
          schema:
            $ref: '#/definitions/PwdRetrievalEmailAddress'
          examples:
            application/json:
              emailAddress: xxx@test
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '403':
          description: Forbidden
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
          examples:
            application/json:
              errorCode: '1677931527'
              errorMessage: xxx
              parameters: []
        '502':
          description: Bad Gateway
          schema:
            type: string
  /v1/users/verify-code:
    post:
      x-dr-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${users-api}
      summary: 用户发送临时验证码
      description: 用户发送临时验证码
      operationId: sendVerifyCodeUsingPOST
      consumes:
        - application/json
      parameters:
        - name: verifyCodeSendRequest
          in: body
          required: true
          description: 发送验证码请求体
          schema:
            $ref: '#/definitions/VerifyCodeSendRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
          examples:
            application/json:
              uuid: 88a94c476f12a21e016f12a246e50009
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '403':
          description: Forbidden
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
          examples:
            application/json:
              errorCode: '1677929515'
              errorMessage: xxx
              parameters: []
        '502':
          description: Bad Gateway
          schema:
            type: string
  /v1/users/verify-code/action/check:
    post:
      x-dr-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      x-request-examples-url-1: /v1/users/verify_code/action/check
      x-request-examples-text-1:
        userId: '123456789'
        userName: testName
        randomCode: '123456789'
      x-request-examples-1:
        userId: '123456789'
        userName: testName
        randomCode: '123456789'
      tags:
        - ${users-api}
      summary: 校验用户临时验证码
      description: 校验用户临时验证码
      operationId: checkVerifyCodeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: verifyCodeDto
          in: body
          required: true
          description: 校验验证码请求体
          schema:
            $ref: '#/definitions/VerifyCodeDto'
      responses:
        '200':
          description: OK
          schema:
            type: string
          examples:
            application/json:
              userId: '123456789'
              randomCode: '123456789'
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '403':
          description: Forbidden
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
          examples:
            application/json:
              errorCode: '1677929515'
              errorMessage: xxx
              parameters: []
        '502':
          description: Bad Gateway
          schema:
            type: string
  /v1/users/password/action/reset:
    put:
      x-dr-role: 'N'
      x-product: OceanCyber,OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      x-request-examples-url-1: /v1/users/password/action/reset
      x-request-examples-text-1:
        userId: '123456789'
        userName: test_user
        randomCode: '123456789'
        newPassword: xxxxxxxxx
        comfirmPassword: xxxxxxxxx
      x-request-examples-1:
        userId: '123456789'
        userName: test_user
        randomCode: '123456789'
        newPassword: xxxxxxxxx
        comfirmPassword: xxxxxxxxx
      tags:
        - ${users-api}
      summary: 用户重置密码
      description: 用户重置忘记的密码
      operationId: resetForgottenPasswordUsingPut
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: retrievePasswordDto
          in: body
          required: true
          description: 重置用户忘记的密码请求体
          schema:
            $ref: '#/definitions/ResetPasswordDto'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '403':
          description: Forbidden
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
          examples:
            application/json:
              errorCode: '1677929515'
              errorMessage: xxx
              parameters: []
        '502':
          description: Bad Gateway
          schema:
            type: string
  /v1/users/login-user:
    get:
      x-dm-role: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      tags:
        - ${users-api}
      summary: 查询单个用户
      operationId: getLoginUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: X-Auth-Token
          in: header
          description: Access token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserInnerResponseBody'
            originalRef: UserInnerResponseBody
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization:
            - global
  /v1/multiple-storage-pool/remote-dp-user:
    get:
      x-dr-role: 'Y'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-rd-admin-role: 'Y'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${users-api}
      description: 获取被查询指定复制目标集群的token并调用接口查询指定复制目标集群所有数据保护管理员
      operationId: remoteDPUserUsingGET
      parameters:
        - name: clusterId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: 用户列表
          schema:
            $ref: '#/definitions/PageListResponse'
  /v1/multiple-storage-pool/remote-dp-user-info:
    get:
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-rd-admin-role: 'Y'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'Y'
      x-public-api: 'Y'
      x-sysadmin-role: 'N'
      tags:
        - ${users-api}
      description: 查询所有数据保护管理员
      operationId: remoteDPUserInfoUsingGET
      responses:
        '200':
          description: 用户列表
          schema:
            $ref: '#/definitions/PageListResponse'
  /v1/role-auth/resource-ids:
    post:
      tags:
        - ${role-auth-api}
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 通过资源id列表查询所有权限集合
      operationId: queryRoleAuthSetByResourceIds
      parameters:
        - name: resourceIds
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 权限集合
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthVo'
  /v1/role-auth/current-user:
    get:
      tags:
        - ${role-auth-api}
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect E6000
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'Y'
      x-rd-admin-role: 'N'
      x-auditor-role: 'Y'
      x-dp-admin-role: 'N'
      x-public-api: 'Y'
      x-sysadmin-role: 'Y'
      summary: 查看当前用户所有的权限列表
      operationId: queryRoleAuthSetByCurrentUser
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthVo'
  /v1/role-auth/role/{id}:
    get:
      x-dr-role: 'N'
      x-product: OceanProtect X8000,OceanProtect X6000,OceanProtect X3000,OceanProtect DataBackup,OceanProtect for HCS
      x-dm-role: 'N'
      x-impact-subsystem: 不影响
      x-access-port: 25081
      x-auth-required: 'N'
      x-rd-admin-role: 'N'
      x-auditor-role: 'N'
      x-dp-admin-role: 'N'
      x-public-api: 'N'
      x-sysadmin-role: 'Y'
      tags:
        - ${role-auth-api}
      summary: 查询角色关联的权限
      operationId: getAuthListByRoleIdUsingGet
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 角色id
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthVo'
securityDefinitions:
  Authorization:
    type: apiKey
    name: TOKEN
    in: header
definitions:
  AuthRequest:
    type: object
    required:
      - password
      - userName
      - userType
    properties:
      authType:
        type: string
        enum:
          - STORAGE_SYSTEM
      userType:
        type: string
        enum:
          - COMMON
          - SAML
          - LDAP
          - LDAPGROUP
        description: 用户类型。COMMON-本地用户，SAML-SAML用户，LDAP-LDAP用户，LDAPGROUP-LDAP用户组用户
      password:
        type: string
        description: >-
          密码。1、密码长度和复杂度，分别是由“查询安全策略”接口的passLenVal字段和passComplexVal字段决定。2、密码长度：8-64
      userName:
        type: string
        description: 用户名称。1、只能以字母、下划线、中文开头，由中文、数字、字母或者下划线组成的字符串。2、用户名长度：5-64
      dynamicCode:
        type: string
        description: 邮箱动态口令
      language:
        type: integer
        enum:
          - 1
          - 2
        description: 用户语言，1：中文，2：英文
    title: AuthRequest
  FeatureSwitchRequest:
    type: object
    required:
      - enable
      - featureName
    properties:
      enable:
        type: boolean
        description: 已启用
      featureName:
        type: string
        description: 特性名称
    title: FeatureSwitchRequest
  WeakPasswordAddRequest:
    type: object
    required:
      - password
    properties:
      password:
        type: string
        description: 弱密码
        minLength: 8
        maxLength: 64
    title: WeakPasswordAddRequest
  FeatureSwitchResponseBody:
    type: object
    properties:
      enable:
        type: boolean
        description: 已启用
      featureName:
        type: string
        description: 特性名称
    title: FeatureSwitchResponseBody
  GetSecurityIpResponseBody:
    type: object
    properties:
      securityIpList:
        type: array
        description: 可访问IP列表
        items:
          $ref: '#/definitions/SecurityIpBo'
          originalRef: SecurityIpBo
      total:
        type: integer
        format: int32
        description: 可访问IP列表数目
    title: GetSecurityIpResponseBody
  GetWeakPasswordsResponseBody:
    type: object
    properties:
      total:
        type: integer
        format: int32
        description: 弱口令总数
      weakPasswords:
        type: array
        description: 弱口令列表
        items:
          $ref: '#/definitions/WeakPasswordBo'
          originalRef: WeakPasswordBo
    title: GetWeakPasswordsResponseBody
  LoginResponseBody:
    type: object
    properties:
      expireDay:
        type: integer
        format: int64
        description: 密码过期剩余天数
      modifyPassword:
        type: boolean
        description: 是否需要修改密码
      token:
        type: string
        description: token
      userId:
        type: string
        description: 用户ID
      deployType:
        type: string
        description: 部署场景（a8000、cloudbackup、d0、d1、d2、d3、d4、d5）
      timeZone:
        type: string
        description: 系统时区
        example: Asia/Beijing
    title: LoginResponseBody
  ResetPasswordRequestBody:
    type: object
    required:
      - adminPassword
      - confirmPassword
      - newPassword
    properties:
      adminPassword:
        type: string
        description: 当前登录的系统管理员的密码。
      confirmPassword:
        type: string
        description: 确认密码
      newPassword:
        type: string
        description: 新密码，密码长度及复杂度与创建用户相同。
    title: ResetPasswordRequestBody
  RoleBo:
    type: object
    properties:
      createTime:
        type: string
        format: date-time
        description: 创建时间
        minLength: 0
        maxLength: 16
      creatorId:
        type: string
        description: 创建者ID
        minLength: 0
        maxLength: 128
      roleDescription:
        type: string
        description: 角色信息描述
        minLength: 0
        maxLength: 255
      roleId:
        type: integer
        format: int64
        description: 角色ID
        minimum: 0
      roleName:
        type: string
        description: 角色名称
        minLength: 4
        maxLength: 64
      userNum:
        type: integer
        format: int32
        description: 角色关联用户数量
        minimum: 0
      is_default:
        type: boolean
        description: 是否为内置角色
    title: RoleBo
  RoleListReponseBody:
    type: object
    properties:
      roleBoList:
        type: array
        description: 角色列表
        items:
          $ref: '#/definitions/RoleBo'
          originalRef: RoleBo
      total:
        type: integer
        format: int32
        description: 角色总数
    title: RoleListReponseBody
  SecurityIpBo:
    type: object
    properties:
      id:
        type: string
        description: 可访问IP地址ID
      ipType:
        type: string
        description: 可访问IP地址类型
        enum:
          - IPV4
          - IPV6
          - IPV4_SEGMENT
          - IPV6_SEGMENT
      securityIp:
        type: string
        description: 可访问IP地址
    title: SecurityIpBo
  SecurityIpRequest:
    type: object
    required:
      - securityIp
    properties:
      securityIp:
        type: string
        description: 可访问IP地址
    title: SecurityIpRequest
  SecurityPolicyBo:
    type: object
    properties:
      minLifetime:
        type: integer
        format: int32
        description: 密码修改间隔
        minimum: 1.0
        maximum: 9999.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      passComplexVal:
        type: integer
        format: int32
        description: >-
          密码复杂度1、值为2时，密码必须包含特殊字符、大写字母、小写字母和数字2、值为4时，密码必须包含特殊字符，并且至少包含大写字母、小写字母以及数字中任意两者的组合
      passCtrl:
        type: boolean
        description: 是否设置密码有效期
      passErrNum:
        type: integer
        format: int32
        description: 输错次数
        minimum: 1.0
        maximum: 9.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      passHistoryDay:
        type: integer
        format: int32
        description: 历史密码保留最长时间
        minimum: 0.0
        maximum: 365.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      passHistoryNum:
        type: integer
        format: int32
        description: 历史密码保留最大个数
        minimum: 0.0
        maximum: 12.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      passLenVal:
        type: integer
        format: int32
        description: 密码长度:8-64
      passLockTime:
        type: integer
        format: int32
        description: 锁定时间
        minimum: 3.0
        maximum: 2000.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      sessionTime:
        type: integer
        format: int32
        description: 超时时间
        minimum: 1.0
        maximum: 100.0
        exclusiveMinimum: false
        exclusiveMaximum: false
      usefulLife:
        type: integer
        format: int32
        description: 有效期
        minimum: 60.0
        maximum: 360.0
        exclusiveMinimum: false
        exclusiveMaximum: false
    title: SecurityPolicyBo
  UpdatePasswordRequestBody:
    type: object
    required:
      - confirmPassword
      - newPassword
      - originalPassword
    properties:
      confirmPassword:
        type: string
        description: 确认密码
      newPassword:
        type: string
        description: 新密码，密码长度及复杂度与创建用户相同。
      originalPassword:
        type: string
        description: 原密码
    title: UpdatePasswordRequestBody
  UpdateUserRequestBody:
    type: object
    properties:
      description:
        type: string
        description: 描述。最大长度：255
      sessionControl:
        type: boolean
        description: 是否开启会话限制，true开启，false不开启，默认不开启。
      sessionLimit:
        type: integer
        format: int32
        example: 1
        description: 最大会话个数。
        minimum: 1.0
        maximum: 8.0
      resourceSetAuthorizationSets:
        type: array
        items:
          $ref: '#/definitions/ResourceSetAuthorization'
        description: 用户对应的资源授权
      userName:
        type: string
        description: 用户名称
    title: UpdateUserRequestBody
  UserInfo:
    type: object
    properties:
      id:
        type: string
      mustModifyPassword:
        type: boolean
      name:
        type: string
      passwordVersion:
        type: integer
        format: int64
      roles:
        type: array
        items:
          $ref: '#/definitions/RoleBo'
          originalRef: RoleBo
      userName:
        type: string
    title: UserInfo
  UserInnerResponseBody:
    type: object
    properties:
      accessControl:
        type: string
        description: 访问控制  ALLOW_ACCESS_GUI, ALLOW_ACCESS_REST_API
      defaultUser:
        type: boolean
        description: 是否为内置默认用户，true-为内置默认用户，false-非内置默认用户
      description:
        type: string
        description: 描述。最大长度：255
      lock:
        type: boolean
        description: 是否被锁定，true-被锁定，false-未锁定
      rolesSet:
        type: array
        description: 用户角色列表，一个用户只能有一个角色。
        items:
          $ref: '#/definitions/RoleBo'
          originalRef: RoleBo
      sessionControl:
        type: boolean
        description: 是否开启会话限制，true开启，false不开启，默认不开启。
      sessionLimit:
        type: integer
        format: int32
        description: 最大会话个数。
      sysAdmin:
        type: boolean
        description: 是否为内置默认系统管理员，true-为默认系统管理员，false-非默认系统管理员
      userId:
        type: string
        description: 用户ID
      userName:
        type: string
        description: 用户名称。1、只能以字母、下划线、中文开头，由中文、数字、字母或者下划线组成的字符串。2、用户名长度：5-64
      userType:
        type: string
        description: 用户类型。COMMON-本地用户，SAML-SAML用户，LDAP-LDAP用户，LDAPGROUP-LDAP用户组用户
      loginType:
        type: integer
        description: 登录方式, 0:密码登录，1：密码+动态口令登录
      dynamicCodeEmail:
        type: string
        description: 收件人邮箱地址
    title: UserInnerResponseBody
  UserListReponseBody«UserResponseBody»:
    type: object
    properties:
      currentCount:
        type: integer
        format: int64
        description: 当前总数
      pageSize:
        type: integer
        format: int32
        description: 分页数量
      startIndex:
        type: integer
        format: int32
        description: 当前页数
      total:
        type: integer
        format: int32
        description: 总数
      userList:
        type: array
        description: 分页查询结果列表
        items:
          $ref: '#/definitions/UserResponseBody'
          originalRef: UserResponseBody
    title: UserListReponseBody«UserResponseBody»
  UserRequestBody:
    type: object
    required:
      - confirmPassword
      - rolesIdsSet
      - userName
      - userPassword
    properties:
      accessControlEnum:
        type: string
        example: ALLOW_ACCESS_GUI
        description: 访问控制  ALLOW_ACCESS_GUI, ALLOW_ACCESS_REST_API
        enum:
          - ALLOW_ACCESS_GUI
          - ALLOW_ACCESS_REST_API
      confirmPassword:
        type: string
        description: 密码。1、密码长度和复杂度，分别是由“查询安全策略”接口的passLenVal字段和passComplexVal字段决定。2、密码长度：8-64
      description:
        type: string
        description: 描述。最大长度：255
      rolesIdsSet:
        type: array
        description: 用户角色列表，一个用户只能有一个角色。
        items:
          type: string
      sessionControl:
        type: boolean
        description: 是否开启会话限制，true开启，false不开启，默认不开启。
      sessionLimit:
        type: integer
        format: int32
        example: 0
        description: 最大会话个数。
        minimum: 1.0
        maximum: 8.0
      userName:
        type: string
        description: 用户名称。1、只能以字母、下划线、中文开头，由中文、数字、字母或者下划线组成的字符串。2、用户名长度：5-64
        pattern: ^[a-zA-Z_\u4e00-\u9fa5]{1}[\u4e00-\u9fa5\w-]*$
      userPassword:
        type: string
        description: 密码。1、密码长度和复杂度，分别是由“查询安全策略”接口的passLenVal字段和passComplexVal字段决定。2、密码长度：8-64
      resourceSetAuthorizationSets:
        type: array
        items:
          $ref: '#/definitions/ResourceSetAuthorization'
        description: 用户对应的权限合集
    title: UserRequestBody
  UserResponseBody:
    type: object
    properties:
      accessControl:
        type: string
        description: 访问控制  ALLOW_ACCESS_GUI, ALLOW_ACCESS_REST_API
      defaultUser:
        type: boolean
        description: 是否为内置默认用户，true-为内置默认用户，false-非内置默认用户
      description:
        type: string
        description: 描述。最大长度：255
      lock:
        type: boolean
        description: 是否被锁定，true-被锁定，false-未锁定
      login:
        type: boolean
        description: 用户是否在线，true-在线，false-离线
      rolesSet:
        type: array
        description: 用户角色列表，一个用户只能有一个角色。
        items:
          $ref: '#/definitions/RoleBo'
          originalRef: RoleBo
      sessionControl:
        type: boolean
        description: 是否开启会话限制，true开启，false不开启，默认不开启。
      sessionLimit:
        type: integer
        format: int32
        description: 最大会话个数。
      sysAdmin:
        type: boolean
        description: 是否为内置默认系统管理员，true-为默认系统管理员，false-非默认系统管理员
      userId:
        type: string
        description: 用户ID
      userName:
        type: string
        description: 用户名称。1、只能以字母、下划线、中文开头，由中文、数字、字母或者下划线组成的字符串。2、用户名长度：5-64
      rolesIdsSet:
        type: array
        items:
          type: string
        description: 用户对应的角色
      ResourceSetAuthorization:
        type: array
        items:
          $ref: '#/definitions/ResourceSetAuthorization'
        description: 用户对应的资源授权
    title: UserResponseBody
  WeakPasswordBo:
    type: object
    properties:
      id:
        type: string
        description: 弱口令id
      password:
        type: string
        description: 弱口令
    title: WeakPasswordBo
  PwdRetrievalEmailRequest:
    description: 密码找回邮箱请求
    properties:
      emailAddress:
        type: string
        description: 密码找回邮箱地址
  PwdRetrievalEmailAddress:
    description: 密码找回邮箱响应
    properties:
      emailAddress:
        type: string
        description: 邮箱地址
  VerifyCodeSendRequest:
    properties:
      userName:
        type: string
        description: 用户名
      emailAddress:
        type: string
        description: 用户收件邮箱
      language:
        type: integer
        format: int32
        description: 语言
        default: 1
    required:
      - userName
      - emailAddress
  VerifyCodeDto:
    properties:
      userId:
        type: string
        description: 用户id
      userName:
        type: string
        description: 用户名
      randomCode:
        type: string
        description: 随机校验码
    required:
      - userId
      - userName
      - randomCode
  ResetPasswordDto:
    properties:
      userId:
        type: string
        description: 用户id
      userName:
        type: string
        description: 用户名
      randomCode:
        type: string
        description: 随机校验码
      newPassword:
        type: string
        description: 新密码
      confirmPassword:
        type: string
        description: 确认密码
    required:
      - userId
      - userName
      - randomCode
      - newPassword
      - confirmPassword
  SendDynamicCodeRequest:
    type: object
    required:
      - userType
      - password
      - userName
      - language
    properties:
      userType:
        type: string
        enum:
          - COMMON
          - SAML
          - LDAP
          - LDAPGROUP
        description: 用户类型。COMMON-本地用户，SAML-SAML用户，LDAP-LDAP用户，LDAPGROUP-LDAP用户组用户
      password:
        type: string
        description: 密码。1、密码长度和复杂度，分别是由“查询安全策略”接口的passLenVal字段和passComplexVal字段决定。2、密码长度：8-64
      userName:
        type: string
        description: 用户名称。1、只能以字母、下划线、中文开头，由中文、数字、字母或者下划线组成的字符串。2、用户名长度：5-64
      language:
        type: integer
        enum:
          - 1
          - 2
        description: 用户语言，1：中文，2：英文
      verifyCode:
        type: string
    title: SendDynamicCodeRequest
  PageListResponse:
    type: object
    properties:
      totalCount:
        type: integer
        format: int32
        description: 总记录数
      startIndex:
        type: integer
        format: int32
        description: 开始索引
      pageSize:
        type: integer
        format: int32
        description: 页面大小
      totalPages:
        type: integer
        format: int32
        description: 总页数
      records:
        type: array
        items:
          $ref: '#/definitions/UserResponseBody'
        description: 结果列表
  ResourceSetScopeModuleEnum:
    type: object
    properties:
      VMware:
        type: string
        description: VMWARE
      CNware:
        type: string
        description: CNWARE
      FusionCompute:
        type: string
        description: FUSION_COMPUTE
      Hyper_V:
        type: string
        description: HYPER_V
      Kubernetes_CSI:
        type: string
        description: KUBERNETES_CSI
      Kubernetes_FlexVolume:
        type: string
        description: KUBERNETES_FLEXVOLUME
      OpenStack:
        type: string
        description: OPENSTACK
      HCSStack:
        type: string
        description: HCSSTACK
      HCSStack_GaussDB:
        type: string
        description: HCSSTACK_GAUSSDB
      ApsaraStack:
        type: string
        description: APSARA_STACK
      ADDS:
        type: string
        description: ADDS
      Exchange:
        type: string
        description: EXCHANGE
      SAP_HANA:
        type: string
        description: SAP_HANA
      StorageEquipment:
        type: string
        description: STORAGE_EQUIPMENT
      NasShare:
        type: string
        description: NAS_SHARE
      NasFileSystem:
        type: string
        description: NAS_FILE_SYSTEM
      ObjectStorage:
        type: string
        description: OBJECT_STORAGE
      CommonShare:
        type: string
        description: COMMON_SHARE
      Volume:
        type: string
        description: VOLUME
      Fileset:
        type: string
        description: FILE_SET
      DB2:
        type: string
        description: DB2
      Dameng:
        type: string
        description: DAMENG
      GaussDB:
        type: string
        description: GAUSSDB
      GaussDB_T:
        type: string
        description: GAUSSDB_T
      GoldenDB:
        type: string
        description: GOLDENDB
      Informix:
        type: string
        description: INFORMIX
      Kingbase:
        type: string
        description: KING_BASE
      MySQL:
        type: string
        description: MYSQL
      OceanBase:
        type: string
        description: OCEANBASE
      Oracle:
        type: string
        description: ORACLE
      PostgrepSQL:
        type: string
        description: POSTGREP_SQL
      SQL_Server:
        type: string
        description: SQL_SERVER
      TDSQL:
        type: string
        description: TDSQL
      TiDB:
        type: string
        description: TIDB
      openGauss:
        type: string
        description: OPENGAUSS
      GeneralDb:
        type: string
        description: GENERALDB
      GaussDB_DWS:
        type: string
        description: GAUSSDB_DWS
      ClickHouse:
        type: string
        description: CLICK_HOUSE
      Elasticsearch:
        type: string
        description: ELASTICSEARCH
      HBase:
        type: string
        description: HBASE
      HDFS:
        type: string
        description: HDFS
      Hive:
        type: string
        description: HIVE
      MongoDB:
        type: string
        description: MONGODB
      Redis:
        type: string
        description: REDIS
      Agent:
        type: string
        description: AGENT
      RESOURCE_GROUP:
        type: string
        description: RESOURCE_GROUP
      SLA:
        type: string
        description: SLA
      QOS:
        type: string
        description: QOS
      type:
        type: string
        description: 类型
  ResourceDto:
    type: object
    properties:
      resourceIdList:
        type: array
        items:
          type: string
          pattern: ^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
        description: 选择的资源列表
      scopeModule:
        description: 资源类型枚举
        $ref: '#/definitions/ResourceSetScopeModuleEnum'
  ResourceSetTypeEnum:
    type: object
    properties:
      RESOURCE:
        type: string
        description: RESOURCE
      RESOURCE_GROUP:
        type: string
        description: RESOURCE_GROUP
      SLA:
        type: string
        description: SLA
      QOS:
        type: string
        description: QOS
      COPY:
        type: string
        description: COPY
      JOB:
        type: string
        description: JOB
      ALARM:
        type: string
        description: ALARM
      EVENT:
        type: string
        description: EVENT
      REPORT:
        type: string
        description: REPORT
      EXERCISE:
        type: string
        description: EXERCISE
      JOB_LOG:
        type: string
        description: JOB_LOG
  ResourceSetRelationDto:
    type: object
    properties:
      resourceDtoList:
        type: array
        items:
          $ref: '#/definitions/ResourceDto'
      type:
        $ref: '#/definitions/ResourceSetTypeEnum'
  ResourceSetRequest:
    type: object
    properties:
      resourceSetId:
        type: string
        description: 资源集id
        pattern: ^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      name:
        type: string
        description: 资源集名称
        maxLength: 64
        minLength: 0
      description:
        type: string
        description: 资源集描述
        maxLength: 255
        minLength: 0
      resourceSetRelationList:
        type: array
        items:
          $ref: '#/definitions/ResourceSetRelationDto'
        description: 选择的资源
  RoleRequest:
    type: object
    properties:
      roleName:
        type: string
        description: 角色名称
        pattern: ^[a-zA-Z0-9_\u4e00-\u9fa5]{1}[\u4e00-\u9fa5\w-\.]*$
        minLength: 4
        maxLength: 64
      roleDescription:
        type: string
        description: 角色描述
        maxLength: 255
      authList:
        type: array
        items:
          type: string
          maxLength: 1024
        description: 授权列表
  ResourceSetVo:
    type: object
    properties:
      userNum:
        type: integer
        format: int32
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      isDefault:
        type: boolean
      isPublic:
        type: boolean
      createTime:
        type: integer
        format: int64
  PageListResponse_reource_set:
    type: object
    properties:
      totalCount:
        type: integer
        format: int32
        description: 总记录数
      startIndex:
        type: integer
        format: int32
        description: 开始索引
      pageSize:
        type: integer
        format: int32
        description: 页面大小
      totalPages:
        type: integer
        format: int32
        description: 总页数
      records:
        type: array
        items:
          $ref: '#/definitions/ResourceSetVo'
        description: 结果列表
  OptAuthBo:
    type: object
    properties:
      ioptID:
        type: integer
        format: int64
      soptName:
        type: string
      surl:
        type: string
      imaster:
        type: boolean
      loperationStatus:
        type: integer
        format: int64
      serialNumber:
        type: string
  AuthVo:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      authOperation:
        type: string
      scopeModule:
        type: string
  PageListResponse_Role:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/RoleBo'
      totalCount:
        type: integer
        format: int32
      startIndex:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      totalPages:
        type: integer
        format: int32
  ResourceRoleAuthVo:
    type: object
    required:
      - resourceId
      - resourceRoleAuth
    properties:
      resourceId:
        type: string
        description: 资源id
      resourceRoleAuth:
        type: array
        items:
          $ref: '#/definitions/AuthVo'
        description: 该资源所对应的权限列表
  ResourceSetAuthorization:
    type: object
    properties:
      roleId:
        type: string
      resourceSetIds:
        type: array
        items:
          type: string
  ResourceSetRoleResponse:
    type: object
    properties:
      resourceSetName:
        type: string
        description: 资源集名称
        minLength: 0
        maxLength: 64
      roleName:
        type: string
        description: 角色名称
        minLength: 0
        maxLength: 64
      resourceSetDescription:
        type: string
        description: 资源集描述
        minLength: 0
        maxLength: 1024
      resourceSetId:
        type: string
        description: 资源集Id
        pattern: ^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      roleId:
        type: string
        description: 角色id
        pattern: ^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      isDefault:
        type: boolean
        description: 是否是默认资源集
      isPublic:
        type: boolean
        description: 是否是公开资源集
  ResourceSetTypeCountVo:
    type: object
    properties:
      scopeModule:
        type: string
        description: 对应module
        maxLength: 32
      resourceNum:
        type: integer
        format: int32
        description: 资源数量
        minimum: 0
  ResourceSetRelatedUserRoleResponse:
    type: object
    properties:
      userName:
        type: string
        description: 用户名称
        maxLength: 64
      userDesc:
        type: string
        description: 用户描述
        maxLength: 1024
      roleName:
        type: string
        description: 角色名称
        maxLength: 64
      roleDesc:
        type: string
        description: 角色描述
        maxLength: 1024
  ResourceSetDeleteRequest:
    type: object
    required:
      - resourceSetIdList
    properties:
      resourceSetIdList:
        type: array
        items:
          type: string
        description: 资源集Id列表
  resourceSetQueryRequest:
    type: object
    properties:
      resourceSetId:
        type: string
        description: 资源集id
        pattern: ^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      resourceSetRelationList:
        type: array
        items:
          type: string
        description: 待查找的资源对象id列表
  RoleDeleteRequest:
    type: object
    description: 删除角色接口请求类
    required:
      - roleIdList
    properties:
      roleIdList:
        type: array
        items:
          type: string
        description: 角色id列表
responses:
  ErrorResponse:
    description: 统一错误响应
    examples:
      application/json:
        errorCode: '1677931527'
        errorMessage: xxx
        parameters: []
    schema:
      type: object
